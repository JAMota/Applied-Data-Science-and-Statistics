---
format:
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
    documentclass: scrartcl
    papersize: a4
    code-fold: true
    geometry:
      - top=30mm
      - left=15mm
      - right = 15mm
      - heightrounded
    editor_options:
      markdown:
        wrap: 72
bibliography: references.bib
bibio-style: unsrt
editor: visual
---



## Introduction

Multiple institutions have been a target of increasingly more disruptive or destructive cyber attacks over the last few years which has lead to government action.
The data used in my work was collected yearly by the uk government department for Digital, Culture, Media and Sport (DCMS) with the purpose of helping the government understand the importance cyber security for British institutions, better shape policy regarding cyber security, create schemes to increase awareness for such problems and better protect institutions form cyber security threats.
As such this analysis will investigate the relationship between how institutions protect themselves from cyber attacks and the affect of said attacks on these institutions in the last 5 years.

## Objectives

Objectives of this report:
  -Creating of a new tidy data set for each of the years including recompiled variables for the management, policing and rules implemented to protect the organisation, the type of attack that affected the institution and its respective outcomes.
  -utilize Multiple Imputation by Chained Equations (Mice), to generate missing values to replace the missing data.
  -Do hypothesis testing on my new fitted models to compare how the protective measures and attack type affect the outcome of the cyber attack on the institution.
  -Mention the limitations of this analysis.
  -Conclusion with recommendation for future research.

## Data

Initial data wrangling:

Due to the untidy state of the data collect via the random probability telephone survey, these data sets containing between 421 to 462 variables have to been clean up into 21 easily comparable variables. 
The clean up process consisted of computing new variables utilizing the multiple subcategories of answers to the survey questions, grouping them into more flexible options while adjusting missing values to allow for such computation.
Removing unnecessary data variables that are irrelevant to my hypothesis testing, converting the SPSS labelled data into R data structures to enable imputation of missing values and proper correlations computation and conversion of the appropriate missing value responses to actual missing data. 

Initial data analysis:

It can be observed a significant degree of missing data on my data sets coming from multiple sources, the main source of missing data is derived from a limitation of the data collected, the lack of 

After finishing to tidy the data I have imputed the missing values using Multiple Imputation by Chained Equations on each of the data sets.

using the a mixture of the methods of logical regression in the majority of the variables due to their dichotomous and binary behavior
polynomial regression which is more adequate for

##loreg is for dichotomous missing data //dichotomous two mutuallu exclusive groups
##polyreg is for categorical missing data // categorical variable can be one of a limited, and usually fixed number of values aka its discrete 

## Limitations

There are multiple limitations to my analysis to be noted. Firstly, the
data collected is limited to cyber attacks that were detected, there is
variety of attacks that have gone unnoticed and therefore the data has a
systematic tendency to underestimate the real level of breach
attacks.[@CyberSurvey2020] 
Secondly the missing data generated by imputation is
biased since not all data is missing completly at random, mainly due to smaller or less digital institution as they don't have the infrastructure to detect, assess and report cyber attacks.



```{r}
library(haven)
library(tidyverse)
library(dplyr)
library(geometry) 
library(formatR)
#install.packages("VIM")
library(Amelia)
library(mice)
library(VIM)
library(labelled)
library(GGally)
library(mgcv)


```
```{r, echo=FALSE}
# 
# A few hours of trial and errors can save you a few minutes of reading
# the proper documentation :)
# https://quarto.org/docs/output-formats/pdf-basics.html\
# Go to terminal tab down there and type quarto install tool tinytex\
# NOTE TO SELF!!!! using quarto is the same as playing restart Rstudio
# simulator 2022 because nothing is properly re-cached and they have a
# worse garbage collector than assembly so if you still get the same error
# after changing the just restart rstudio and remember to never ever ever
# change the initial format or add anything close to it because it will
# break the pdf and start generating html also please be smart and read
# https://quarto.org/docs/reference/formats/pdf.html for the formatting
##VIM package is deadly to quarto but I kinda need it

##hipothises 
##How does each type of management, rules, policing and type of attacks affect the damages to an institution

```


```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## Very important documentation for the 2018 data set //it is a surprise toll that will help us later
technicalAnnex2018 = 'https://doc.ukdataservice.ac.uk/doc/8406/mrdoc/pdf/8406_cyber_security_breaches_survey_2018_technical_annex.pdf'

## this is the loading the first year of this level of survey data set
## after burning my entire brain, replacing it with the backup one and also burning that one I discovered that it is just these lines that aren't being formatted in pdf because they are absolutely huge but at least it works for the other ones #FicaADica
## I assume it was thanks to formatR ?? I won't bother to redo every single bloody step again, enough pain and stack for the day
dataCyberSecuritySurvey2018 = read_spss('C:/AppliedDataScienceAndStatistics/Applied-Data-Science-and-Statistics/Term1/WorkingWithData/Assignment1/Cyber Security Breaches Survey, 2018/UKDA-8406-spss-CyberSurvey2018/spss/spss24/17-054294-01_csbs_2018_final_data_deidentified_v1_12042018_public.sav')

## adding the variable year because none of the data sets have any proper way to distinguish between the years of each survey
dataCyberSecuritySurvey2018$year = '2018'
```

## Now we do the same for the other years before we merge them

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## loading the second year of this level of survey data set 
dataCyberSecuritySurvey2019 = read_spss('C:/AppliedDataScienceAndStatistics/Applied-Data-Science-and-Statistics/Term1/WorkingWithData/Assignment1/Cyber Security Breaches Survey, 2019/UKDA-8480-spss-CyberSurvey2019/spss/spss24/csbs_2019_raw_data.sav')

## adding the variable year because none of the data sets have any proper way to distinguish between the years of each survey
dataCyberSecuritySurvey2019$year = '2019'
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## loading the third year of this level of survey data set 
dataCyberSecuritySurvey2020 = read_spss('C:/AppliedDataScienceAndStatistics/Applied-Data-Science-and-Statistics/Term1/WorkingWithData/Assignment1/Cyber Security Breaches Survey, 2020/UKDA-8638-spss-CyberSurvey2020/spss/spss25/csbs2020_final_banded_variables_only_180320_public.sav')

## adding the variable year because none of the data sets have any proper way to distinguish between the years of each survey
dataCyberSecuritySurvey2020$year = '2020'
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## loading the forth year of this level of survey data set 
dataCyberSecuritySurvey2021 = read_spss('C:/AppliedDataScienceAndStatistics/Applied-Data-Science-and-Statistics/Term1/WorkingWithData/Assignment1/Cyber Security Breaches Survey, 2021/UKDA-8825-spss-CyberSurvey2021/spss/spss25/dcms_csbs_2021_banded_data_archive_v9_icu.sav')

## adding the variable year because none of the data sets have any proper way to distinguish between the years of each survey
dataCyberSecuritySurvey2021$year = '2021'
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## loading the fifth and final year of this level of survey data set 
dataCyberSecuritySurvey2022 = read_spss('C:/AppliedDataScienceAndStatistics/Applied-Data-Science-and-Statistics/Term1/WorkingWithData/Assignment1/Cyber Security Breaches Survey, 2022/UKDA-8970-spss/spss/spss25/dcms_csbs_2022_banded_cost_data_only_v4_public.sav')

## adding the variable year because none of the data sets have any proper way to distinguish between the years of each survey
dataCyberSecuritySurvey2022$year = '2022'
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## Now that we have all data loaded lets start by tidying up data set by data set start from 2018


## for some sweet sweet documentation about the questions starting from page 26
##TODO comment in case of fire or debugging
browseURL(technicalAnnex2018)

```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## This entire code snippet is tidying up the type of organisation for the 2018 survey
##renaming the bloody variables to a more java like name

dataCyberSecuritySurvey2018TidyName = rename(dataCyberSecuritySurvey2018,instituitionTypes= 'samptype')

## if instituitionTypes is 1 it is a business if it is 2 it is a charity and in the future 3 is for schools and education


##daily reminder that there is a boolean type but it is called logical
##
##Numeric -	Set of all real numbers
##Integer -	Set of all integers, Z
##Logical - -	TRUE and FALSE
##Complex -	Set of complex numbers
##Character -	“a”, “b”, “c”, …, “ç”, “#”, “~”, …., “1”, “2”, …etc


## it is a string so lets make it a proper numeric code

  dataCyberSecuritySurvey2018TidyName$instituitionTypes = as.integer(dataCyberSecuritySurvey2018TidyName$instituitionTypes)


## typex is 1-2 for businesses and 3 for charities so redundant and can be removed

dataCyberSecuritySurvey2018TidyName = dataCyberSecuritySurvey2018TidyName %>% select(-typex)


##dataCyberSecuritySurvey2018TidyName
## never forget if R can't show all displayed text from a computation it breaks both the rendering and ##the refreshing of the rendered code for some reason ¯/_(ツ)_/¯
## future edit anything and everything breaks for no reason at all, just kill it and reopen
## refer to the first NOTE TO SELF for more information

```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## see questioner documentation start from page 27

technicalAnnex2019 = "https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/950097/Cyber_Security_Breaches_Survey_2019_-_Technical_Annex_V2.pdf"
##TODO comment in case of fire or debugging
browseURL(technicalAnnex2019)
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## see questioner documentation start from page 31

technicalAnnex2020 = "https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/874693/Technical_annex_-_Cyber_Security_Breaches_Survey_2020.pdf"

##TODO comment in case of fire or debugging
browseURL(technicalAnnex2020)
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## see questioner documentation start from page 28

technicalAnnex2021 = "https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/977491/20-046099-01_CSBS_2021_quant_technical_annex_v2.4__clean__190321.pdf"

##TODO comment in case of fire or debugging
browseURL(technicalAnnex2021)
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## see questioner documentation start from page 36

technicalAnnex2022 = "https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1064446/Technical_annex_-_cyber_security_breaches_survey_March_2022__WEB_.pdf"

##TODO comment in case of fire or debugging
browseURL(technicalAnnex2022)

## trying not to get arrested for DDoSing the uk goverment by making a request to all the pdfs after rendering the page for the nth because I can't code nor debug (challenge impossible)
##bonus points if I get an exeter ip banned because of it
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## time to recycle the code for the 2018 survey that gets a "neat" code of the institution types

## This entire code snippet is tidying up the type of organisation for the 2019 survey
##renaming the bloody variables to a more java like name

dataCyberSecuritySurvey2019TidyName = rename(dataCyberSecuritySurvey2019,instituitionTypes= 'samptype')

  dataCyberSecuritySurvey2019TidyName$instituitionTypes = as.integer(dataCyberSecuritySurvey2019TidyName$instituitionTypes)
  
    str(dataCyberSecuritySurvey2019TidyName$instituitionTypes)

  
## typex is redundant be we already have an indentifies for each type of institution and can be removed
## same for questtype since this questioner has more redundancy than amazon and google data centers combined

dataCyberSecuritySurvey2019TidyName = dataCyberSecuritySurvey2019TidyName %>% select(-one_of('typex', 'questtype'))

```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## I continue to save the planet by recycling as much as I can, mostly recycled code from the previous snippet today though
## this time we do have the concept of education institutions as our code just annoy me after I thought they should be converted to boolean like a getter in java

dataCyberSecuritySurvey2020TidyName = rename(dataCyberSecuritySurvey2020,instituitionTypes= 'samptype')

  dataCyberSecuritySurvey2020TidyName$instituitionTypes = as.integer(dataCyberSecuritySurvey2020TidyName$instituitionTypes)
  
    str(dataCyberSecuritySurvey2020TidyName$instituitionTypes)

  
## typex is redundant be we already have an indentifies for each type of institution and can be removed
## same for questtype since this questioner has more redundancy than amazon and google data centers combined

dataCyberSecuritySurvey2020TidyName = dataCyberSecuritySurvey2020TidyName %>% select(-one_of('typex', 'questtype'))
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
##saving the planet one recycled snippet of code at a time


dataCyberSecuritySurvey2021TidyName = rename(dataCyberSecuritySurvey2021,instituitionTypes= 'samptype')

  dataCyberSecuritySurvey2021TidyName$instituitionTypes = as.integer(dataCyberSecuritySurvey2021TidyName$instituitionTypes)
  
    str(dataCyberSecuritySurvey2021TidyName$instituitionTypes)

  
## typex is redundant be we already have an indentifies for each type of institution and can be removed
## same for questtype since this questioner has more redundancy than amazon and google data centers combined

dataCyberSecuritySurvey2021TidyName = dataCyberSecuritySurvey2021TidyName %>% select(-one_of('typex', 'questtype'))

```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## this comment was already dealt by the garbage collector unlike the previous ones

dataCyberSecuritySurvey2022TidyName = rename(dataCyberSecuritySurvey2022,instituitionTypes= 'samptype')

  dataCyberSecuritySurvey2022TidyName$instituitionTypes = as.integer(dataCyberSecuritySurvey2022TidyName$instituitionTypes)
  
    str(dataCyberSecuritySurvey2022TidyName$instituitionTypes)

  
## questtype is redundant be we already have an indentifies for each type of institution and can be removed

dataCyberSecuritySurvey2022TidyName = dataCyberSecuritySurvey2022TidyName %>% select(-questtype)
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## now that we have started the data wrangling we will categorize all institutions by size
## remember that for some wicked reason they use -97 for missing values for anything without a proper missing value code for each question
## I will start by simply nulling every single -97 so we can see how much is missing and then possibly make a table with custom missing values for each like I did in C (remember to start from -1000 to -1999 like standard ACLs)


############################################## 2018 ####################################################
numberOfCycles = length(dataCyberSecuritySurvey2018TidyName$sizea)

dataCyberSecuritySurvey2018TidyNameSize = dataCyberSecuritySurvey2018TidyName

##apparently we have to be careful because an already inserted NA on the variable breaks the 
for (i in 1:numberOfCycles) {
  if(dataCyberSecuritySurvey2018TidyNameSize$sizea[i] == -97){
    dataCyberSecuritySurvey2018TidyNameSize$sizea[i] = NA
  }
    if(dataCyberSecuritySurvey2018TidyNameSize$sizeb[i] == -97){
    dataCyberSecuritySurvey2018TidyNameSize$sizeb[i] = NA
  }
    
}

############################################## 2019 ####################################################

numberOfCycles = length(dataCyberSecuritySurvey2019TidyName$sizea)

dataCyberSecuritySurvey2019TidyNameSize = dataCyberSecuritySurvey2019TidyName

##apparently we have to be careful because an already inserted NA on the variable breaks the 
for (i in 1:numberOfCycles) {
  if(dataCyberSecuritySurvey2019TidyNameSize$sizea[i] == -97){
    dataCyberSecuritySurvey2019TidyNameSize$sizea[i] = NA
  }
    if(dataCyberSecuritySurvey2019TidyNameSize$sizeb[i] == -97){
    dataCyberSecuritySurvey2019TidyNameSize$sizeb[i] = NA
  }
    
}

############################################## 2020 ####################################################

numberOfCycles = length(dataCyberSecuritySurvey2020TidyName$sizea)

dataCyberSecuritySurvey2020TidyNameSize = dataCyberSecuritySurvey2020TidyName

##apparently we have to be careful because an already inserted NA on the variable breaks the 
for (i in 1:numberOfCycles) {
  if(dataCyberSecuritySurvey2020TidyNameSize$sizea[i] == -97){
    dataCyberSecuritySurvey2020TidyNameSize$sizea[i] = NA
  }
    if(dataCyberSecuritySurvey2020TidyNameSize$sizeb[i] == -97){
    dataCyberSecuritySurvey2020TidyNameSize$sizeb[i] = NA
  }
}    

############################################## 2021 ####################################################

numberOfCycles = length(dataCyberSecuritySurvey2021TidyName$sizea)

dataCyberSecuritySurvey2021TidyNameSize = dataCyberSecuritySurvey2021TidyName

##apparently we have to be careful because an already inserted NA on the variable breaks the 
for (i in 1:numberOfCycles) {
  if(dataCyberSecuritySurvey2021TidyNameSize$sizea[i] == -97){
    dataCyberSecuritySurvey2021TidyNameSize$sizea[i] = NA
  }
    if(dataCyberSecuritySurvey2021TidyNameSize$sizeb[i] == -97){
    dataCyberSecuritySurvey2021TidyNameSize$sizeb[i] = NA
  }
} 

############################################## 2022 ####################################################

numberOfCycles = length(dataCyberSecuritySurvey2022TidyName$sizea)

dataCyberSecuritySurvey2022TidyNameSize = dataCyberSecuritySurvey2022TidyName

##apparently we have to be careful because an already inserted NA on the variable breaks the 
for (i in 1:numberOfCycles) {
  if(dataCyberSecuritySurvey2022TidyNameSize$sizea[i] == -97){
    dataCyberSecuritySurvey2022TidyNameSize$sizea[i] = NA
  }
    if(dataCyberSecuritySurvey2022TidyNameSize$sizeb[i] == -97){
    dataCyberSecuritySurvey2022TidyNameSize$sizeb[i] = NA
  }
} 


```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## we don't need neither the combined regions (since those are for business analyzes and we don't do those) same for sector_comb1 and 2.

## region_comb? throw it in the trash. sector_comb1? throw it in the trash. sector_comb2? throw it in the trash.

############################################## 2018 ####################################################

dataCyberSecuritySurvey2018TidyNameSize = dataCyberSecuritySurvey2018TidyNameSize %>% select(-one_of('region_comb', 'sector_comb1','sector_comb2'))

############################################## 2019 ####################################################

dataCyberSecuritySurvey2019TidyNameSize = dataCyberSecuritySurvey2019TidyNameSize %>% select(-one_of('region_comb', 'sector_comb2'))

############################################## 2020 ####################################################

dataCyberSecuritySurvey2020TidyNameSize = dataCyberSecuritySurvey2020TidyNameSize %>% select(-one_of('region_comb', 'sector_comb2'))

############################################## 2021 ####################################################

dataCyberSecuritySurvey2021TidyNameSize = dataCyberSecuritySurvey2021TidyNameSize %>% select(-one_of('region_comb', 'sector_comb2'))

############################################## 2022 ####################################################

dataCyberSecuritySurvey2022TidyNameSize = dataCyberSecuritySurvey2022TidyNameSize %>% select(-one_of('region_comb', 'sector_comb2'))


```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## removing social media questions that are irrelevant because they are absolutely terrible metrics to understand the digitalization of an institution 
##Note to self: if I have time get all of these type of functions in try catch because them breaking up with the select error is no good and it makes me cry every time I have to manually run a part of the snippet and see which is one the bad one
## https://r-lang.com/r-trycatch-function/  ## #FicaADica

############################################## 2018 ####################################################

dataCyberSecuritySurvey2018TidyNameSize = dataCyberSecuritySurvey2018TidyNameSize %>% select(-(online1:online11))

############################################## 2019 ####################################################

dataCyberSecuritySurvey2019TidyNameSize = dataCyberSecuritySurvey2019TidyNameSize %>% select(-(online1:online11))

############################################## 2020 ####################################################

dataCyberSecuritySurvey2020TidyNameSize = dataCyberSecuritySurvey2020TidyNameSize %>% select(-(online1:online11))

############################################## 2021 ####################################################

dataCyberSecuritySurvey2021TidyNameSize = dataCyberSecuritySurvey2021TidyNameSize %>% select(-(online1:online11))

############################################## 2022 ####################################################

dataCyberSecuritySurvey2022TidyNameSize = dataCyberSecuritySurvey2022TidyNameSize %>% select(-(online1:online14))


```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
##removing the question about the mobile usage because it also is a terrible indicator of a company digitalization

############################################## 2018 ####################################################

dataCyberSecuritySurvey2018TidyNameSize = dataCyberSecuritySurvey2018TidyNameSize %>% select(-mobile)

############################################## 2019 ####################################################

dataCyberSecuritySurvey2019TidyNameSize = dataCyberSecuritySurvey2019TidyNameSize %>% select(-mobile)

############################################## 2020 ####################################################

dataCyberSecuritySurvey2020TidyNameSize = dataCyberSecuritySurvey2020TidyNameSize %>% select(-mobile)

############################################## 2021 ####################################################

dataCyberSecuritySurvey2021TidyNameSize = dataCyberSecuritySurvey2021TidyNameSize %>% select(-mobile)

############################################## 2022 ####################################################

dataCyberSecuritySurvey2022TidyNameSize = dataCyberSecuritySurvey2022TidyNameSize %>% select(-mobile)


```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## question about the attitude and outsourcing of cyber security have been removed the the surveys starting from 2020 so it doesn't make sense to keep them in the 2018 and 2019 data set

## I will start doing some proper garbage collection and this time I am not just taking myself out
## I will only ever have the original data and the most recent modified one


############################################## 2018 ####################################################

dataCyberSecuritySurvey2018TidyNameSize = dataCyberSecuritySurvey2018TidyNameSize %>% select(-(outsource:attitude4))

############################################## 2019 ####################################################

dataCyberSecuritySurvey2019TidyNameSize = dataCyberSecuritySurvey2019TidyNameSize %>% select(-(outsource:attitude4))
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## since we want to have access to some proper data we will tidy the questions about how big of a priority is cyber security and how often are the higher ups updated about it
##this could really use some try catches because for the some weird reason -97 == NA does not return true or false, this is like javascript levels of bad

## also excepting this very first one the removals will be at the end so they are computed as if they were a transaction because try and catch is a lie to sell more lines of codes

## thanks to a blessing for our lord not finding the object only gives a warning and we ignore those as long as it still lets run the rest of the code 

rm(dataCyberSecuritySurvey2018TidyName)
rm(dataCyberSecuritySurvey2019TidyName)
rm(dataCyberSecuritySurvey2020TidyName)
rm(dataCyberSecuritySurvey2021TidyName)
rm(dataCyberSecuritySurvey2022TidyName)

############################################## 2018 ####################################################
numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSize$priority)

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSize

##apparently we have to be careful because an already inserted NA on the variable breaks the 
for (i in 1:numberOfCycles) {
  if(dataCyberSecuritySurvey2018TidyNameSizeCyber$priority[i] == -97){
    dataCyberSecuritySurvey2018TidyNameSizeCyber$priority[i] = NA
  }
    if(dataCyberSecuritySurvey2018TidyNameSizeCyber$update[i] == -97){
    dataCyberSecuritySurvey2018TidyNameSizeCyber$update[i] = NA
  }
    
}

############################################## 2019 ####################################################

numberOfCycles = length(dataCyberSecuritySurvey2019TidyNameSize$priority)

dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSize


##apparently we have to be careful because an already inserted NA on the variable breaks the 
for (i in 1:numberOfCycles) {
  if(dataCyberSecuritySurvey2019TidyNameSizeCyber$priority[i] == -97){
    dataCyberSecuritySurvey2019TidyNameSizeCyber$priority[i] = NA
  }
    if(dataCyberSecuritySurvey2019TidyNameSizeCyber$update[i] == -97){
    dataCyberSecuritySurvey2019TidyNameSizeCyber$update[i] = NA
  }
    
}

############################################## 2020 ####################################################

numberOfCycles = length(dataCyberSecuritySurvey2020TidyNameSize$priority)

dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSize


##apparently we have to be careful because an already inserted NA on the variable breaks the 
for (i in 1:numberOfCycles) {
  if(dataCyberSecuritySurvey2020TidyNameSizeCyber$priority[i] == -97){
    dataCyberSecuritySurvey2020TidyNameSizeCyber$priority[i] = NA
  }
    if(dataCyberSecuritySurvey2020TidyNameSizeCyber$update[i] == -97){
    dataCyberSecuritySurvey2020TidyNameSizeCyber$update[i] = NA
  }
}    

############################################## 2021 ####################################################

numberOfCycles = length(dataCyberSecuritySurvey2021TidyNameSize$priority)

dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSize


##apparently we have to be careful because an already inserted NA on the variable breaks the 
for (i in 1:numberOfCycles) {
  if(dataCyberSecuritySurvey2021TidyNameSizeCyber$priority[i] == -97){
    dataCyberSecuritySurvey2021TidyNameSizeCyber$priority[i] = NA
  }
    if(dataCyberSecuritySurvey2021TidyNameSizeCyber$update[i] == -97){
    dataCyberSecuritySurvey2021TidyNameSizeCyber$update[i] = NA
  }
} 

############################################## 2022 ####################################################

numberOfCycles = length(dataCyberSecuritySurvey2022TidyNameSize$priority)

dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSize


##apparently we have to be careful because an already inserted NA on the variable breaks the 
for (i in 1:numberOfCycles) {
  if(dataCyberSecuritySurvey2022TidyNameSizeCyber$priority[i] == -97){
    dataCyberSecuritySurvey2022TidyNameSizeCyber$priority[i] = NA
  }
    if(dataCyberSecuritySurvey2022TidyNameSizeCyber$update[i] == -97){
    dataCyberSecuritySurvey2022TidyNameSizeCyber$update[i] = NA
  }
}

## garbage man? Well, of course I know him. He is me.

rm(dataCyberSecuritySurvey2018TidyNameSize)
rm(dataCyberSecuritySurvey2019TidyNameSize)
rm(dataCyberSecuritySurvey2020TidyNameSize)
rm(dataCyberSecuritySurvey2021TidyNameSize)
rm(dataCyberSecuritySurvey2022TidyNameSize)


```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
##questions about reason of investment in cybersecuirty were removed form the pre-pilot survey in 2020

############################################## 2018 ####################################################

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(reason1:reason27))

############################################## 2019 ####################################################

dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(reason1:reason28))

## the rest were already deleted

```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## removing the cyber security insurance claims because they don't give us relevant data to what we are analyzing in the data set
## pro tip: having insurance does not make you more or less likely to be targeted nor does it change the costs of the attack

############################################## 2018 ####################################################

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(insurex:noinsure19))

############################################## 2019 ####################################################

dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(insurex:noinsure19))

############################################## 2020 ####################################################

dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(insurex:claim))

############################################## 2021 ####################################################

dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(insurex:claim))

############################################## 2022 ####################################################

dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(insurex:claim))

```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## we are removing the questions about asking for info, advice, guidance about cyber security or government schemes

############################################## 2018 ####################################################

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(info1:trainwho7))

############################################## 2019 ####################################################

dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(info1:trainwho7))

############################################## 2020 ####################################################

dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(info1:scheme5))

############################################## 2021 ####################################################

dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(info1:scheme5))

############################################## 2022 ####################################################

## here we have more that we need to remove because they introduced questions similar to the ones that we are removing but with the government as a source for reason to make implementations which we are also not interested in

dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(info1:govtact44))


```

## Management - now is when the policies and procedures are evaluated

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}

## manage 1 - Board members/trustees with responsibility for cyber security
## manage 2 - outsourcing cyber security
## manage 3 - formal policy or policies in place covering cyber security risks
## manage 4 - Business Continuity Plan
## manage 5 - Staff members whose job role includes information security or governance //it stopped being used after the 2020 survey 
## manage 6 - don't know/missing data
## manage 7 - absolutely nothings, good luck have fun (rip bozzo)
## manage 8 - written list of what is critical to protect (only exists in the survey of 2022 not to be used)

## altura de me desemerdar que esta aqui esta mesmo grossa
## não faz frio, nem orvalho, está a chover para caralho
## converting the final value to a collection so I can append all the values //facepalm
## this is where the coping begins, thank goodness no one will ever know what I had done here before refactoring and optimising the code

##managementContinuity - there is a business continuity plan (manage 4) or there are formal policies implemented (outcome 3)
##managementCyber - board members or trustees have cyber security responsibilities (manage 1) or cyber security is being outsourced (manage 2) 
##(also known as the at least they tried but no matter how funny it is terrible variable name)

##################################################### 2018 ###############################################

numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$manage1)

dataCyberSecuritySurvey2018TidyNameSizeCyber$managementContinuity = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$managementCyber = 0
  

for (i in 1:numberOfCycles) {
    
    ## at least this time I am not starting from the last so I don't have to wait the 10 minutes for my computer to fry some eggs while it compiles
  
    
    
  if(dataCyberSecuritySurvey2018TidyNameSizeCyber$manage1[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$manage2[i] == 1){ ##either 1 or 2
    
     dataCyberSecuritySurvey2018TidyNameSizeCyber$managementCyber[i] = 1
  
     }
  
  
    if(dataCyberSecuritySurvey2018TidyNameSizeCyber$manage3[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$manage4[i] == 1){ ##either 3 or 4
    
     dataCyberSecuritySurvey2018TidyNameSizeCyber$managementContinuity[i] = 1
  
     }
    
    if(dataCyberSecuritySurvey2018TidyNameSizeCyber$manage6[i] == 1) {
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$managementCyber[i] = NA
      dataCyberSecuritySurvey2018TidyNameSizeCyber$managementContinuity[i] = NA

      }

}
    


##################################################### 2019 ###############################################


numberOfCycles = length(dataCyberSecuritySurvey2019TidyNameSizeCyber$manage1)

dataCyberSecuritySurvey2019TidyNameSizeCyber$managementContinuity = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$managementCyber = 0
  

for (i in 1:numberOfCycles) {
    
    ## at least this time I am not starting from the last so I don't have to wait the 10 minutes for my computer to fry some eggs while it compiles
  
    
    
  if(dataCyberSecuritySurvey2019TidyNameSizeCyber$manage1[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$manage2[i] == 1){ ##either 1 or 2
    
     dataCyberSecuritySurvey2019TidyNameSizeCyber$managementCyber[i] = 1
  
     }
  
  
    if(dataCyberSecuritySurvey2019TidyNameSizeCyber$manage3[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$manage4[i] == 1){ ##either 3 or 4
    
     dataCyberSecuritySurvey2019TidyNameSizeCyber$managementContinuity[i] = 1
  
     }
    
    if(dataCyberSecuritySurvey2019TidyNameSizeCyber$manage6[i] == 1) {
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$managementCyber[i] = NA
      dataCyberSecuritySurvey2019TidyNameSizeCyber$managementContinuity[i] = NA

    }
}



##################################################### 2020 ###############################################


numberOfCycles = length(dataCyberSecuritySurvey2020TidyNameSizeCyber$manage1)

dataCyberSecuritySurvey2020TidyNameSizeCyber$managementContinuity = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$managementCyber = 0
  

for (i in 1:numberOfCycles) {
    
    ## at least this time I am not starting from the last so I don't have to wait the 10 minutes for my computer to fry some eggs while it compiles
  
    
    
  if(dataCyberSecuritySurvey2020TidyNameSizeCyber$manage1[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$manage2[i] == 1){ ##either 1 or 2
    
     dataCyberSecuritySurvey2020TidyNameSizeCyber$managementCyber[i] = 1
  
     }
  
  
    if(dataCyberSecuritySurvey2020TidyNameSizeCyber$manage3[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$manage4[i] == 1){ ##either 3 or 4
    
     dataCyberSecuritySurvey2020TidyNameSizeCyber$managementContinuity[i] = 1
  
     }
    
    if(dataCyberSecuritySurvey2020TidyNameSizeCyber$manage6[i] == 1) {
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$managementCyber[i] = NA
      dataCyberSecuritySurvey2020TidyNameSizeCyber$managementContinuity[i] = NA

    }
}


##################################################### 2021 ##############################################


numberOfCycles = length(dataCyberSecuritySurvey2021TidyNameSizeCyber$manage1)

dataCyberSecuritySurvey2021TidyNameSizeCyber$managementContinuity = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$managementCyber = 0
  

for (i in 1:numberOfCycles) {
    
    ## at least this time I am not starting from the last so I don't have to wait the 10 minutes for my computer to fry some eggs while it compiles
  
    
    
  if(dataCyberSecuritySurvey2021TidyNameSizeCyber$manage1[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$manage2[i] == 1){ ##either 1 or 2
    
     dataCyberSecuritySurvey2021TidyNameSizeCyber$managementCyber[i] = 1
  
     }
  
  
    if(dataCyberSecuritySurvey2021TidyNameSizeCyber$manage3[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$manage4[i] == 1){ ##either 3 or 4
    
     dataCyberSecuritySurvey2021TidyNameSizeCyber$managementContinuity[i] = 1
  
     }
    
    if(dataCyberSecuritySurvey2021TidyNameSizeCyber$manage6[i] == 1) {
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$managementCyber[i] = NA
      dataCyberSecuritySurvey2021TidyNameSizeCyber$managementContinuity[i] = NA

    }
}



##################################################### 2022 ##############################################



numberOfCycles = length(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage1)

dataCyberSecuritySurvey2022TidyNameSizeCyber$managementContinuity = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$managementCyber = 0
  

for (i in 1:numberOfCycles) {
  
  
    dataCyberSecuritySurvey2022TidyNameSizeCyber$manage1[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage1[i], -10001)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$manage2[i] =  replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage2[i], -10001)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$manage3[i] =  replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage3[i], -10001)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$manage4[i] =  replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage4[i], -10001)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$manage5[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage5[i], -10001)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$manage6[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage6[i], -10001)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$manage7[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage7[i], -10001)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$manage8[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage8[i], -10001)
  
  
    
    ## at least this time I am not starting from the last so I don't have to wait the 10 minutes for my computer to fry some eggs while it compiles
  
    
    
  if(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage1[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$manage2[i] == 1){ ##either 1 or 2
    
     dataCyberSecuritySurvey2022TidyNameSizeCyber$managementCyber[i] = 1
  
  } else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage1[i] == -10001 && dataCyberSecuritySurvey2022TidyNameSizeCyber$manage2[i] == -10001){
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$managementCyber[i] = NA
      }
  
  
    if(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage3[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$manage4[i] == 1){ ##either 3 or 4
    
     dataCyberSecuritySurvey2022TidyNameSizeCyber$managementContinuity[i] = 1
  
    } else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage3[i] == -10001 && dataCyberSecuritySurvey2022TidyNameSizeCyber$manage4[i] == -10001){
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$managementCyber[i] = NA
      }
    
    if(dataCyberSecuritySurvey2022TidyNameSizeCyber$manage6[i] == 1) {
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$managementCyber[i] = NA
      dataCyberSecuritySurvey2022TidyNameSizeCyber$managementContinuity[i] = NA

    }
}



dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(manage1:manage7))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(manage1:manage7))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(manage1:manage7))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(manage1:manage7))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(manage1:manage8))
 
```



```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}

## now we are removing the reasons why they don't have the appropriate measures because we are more interested in the questions about security after these ones 
##also it was deleted after 2019

##that is a catch 22
dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(nopol1:nopol22))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(nopol1:nopol22))

```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}

## sadly all the questions about measures done in the last 12 moths have changes quite a bit during the years which makes it impossible to have a good year to year analysis when we aren't comparing the same thing

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(ident1:ident8))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(ident1:ident8))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(ident1:ident11))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(ident1:ident11))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(ident1:ident7))

##this only exists in 2022 so it makes no sense to look at 
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(comply1:audit))

```

## Rules for company policies

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## This is where the fun begins with some proper policies
##simping for incremental backups


##rule 1 - applying software updates
##rule 2 - up to date maleware protection
##rule 3 - well configured firewalls
##rule 4 - proper permission configuration
##rule 5 - monitoring user activity
##rule 6 - encrypting personal data // only used in 2018
##rule 7 - security controls on company devices
##rule 8 - only allowing access from company devices
##rule 9 - segregated guest wireless / so basically a DMZ
##rule 10 - don't know
##rule 11 - none (YOLO)
##rule 12 - strong passwords //only used in 2018
##rule 13 - backup data to the cloud (diskette robots in data center go brrrrrrr)
##rule 14 - backup the data to another place that isn't the cloud  
##rule 15 - storing and moving data/files securely //wasn't used in 2018
##rule 16 - 2 factor authentication // only used in 2019
##rule 17 - policy for strong passwords //not til 2020
##rule 18 - VPN (virtual private network) //only in 2022
##rule 19 - phishing procedure // only in 2022
##rule 20 - authentication when accessing the network // only in 2022


## TODO TODO TODO TODO unduck this mess as well because I just don't know anymore
## good news is that I have a solution, bad news is that it is not a perfect solution
## at least I won't be able to cause a stack overflow because with a precision of 53 bits, and represents to that precision a range of absolute values from about 2e-308 to 2e+308


##Rules grouping for optimisation

##TODO might have too much in common and separate both security confs and updating with .baks

##rulesUpdating - keeping spftware and maleware protection up to date (rule 1 and 2) and baking up information ( rule 13, 14 and 15(not in 2018 ) )
##rulesSecurityConfigs - well configured firewalls and permission (rule 3 and 4), DMZ (rule 9) and strong passwords (rule 17 not in 2018)
##rulesUserControl -  monitoring user activity (rule 5) as well as good security control and access control (rule 7 and rule 8)


##################################################### 2018 ###############################################



numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$rules1)

dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesUpdating = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesSecurityConfigs = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesUserControl = 0


for (i in 1:numberOfCycles) {
  
  
## the code is now be faster and other hilarious jokes you can tell yourself
  
  
    if(dataCyberSecuritySurvey2018TidyNameSizeCyber$rules1[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$rules2[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$rules13[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$rules14[i] == 1  #dataCyberSecuritySurvey2018TidyNameSizeCyber$rules15[i] == 1 
       ){ ##either 1,2,13,14 and 15 after 2018
    
     dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesUpdating[i] = 1
  
    } 
      if(dataCyberSecuritySurvey2018TidyNameSizeCyber$rules3[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$rules4[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$rules9[i] == 1   #dataCyberSecuritySurvey2018TidyNameSizeCyber$rules17[i] == 1 
       ){ ##either 3,4,9 and 17 after 2018
    
     dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesSecurityConfigs[i] = 1
  
      }
  
        if(dataCyberSecuritySurvey2018TidyNameSizeCyber$rules5[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$rules7[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$rules8[i] == 1){ ##either 5,7,8
    
     dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesUserControl[i] = 1
  
        }
  
  
        if(dataCyberSecuritySurvey2018TidyNameSizeCyber$rules10[i] == 1) { 
    
     dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesUserControl[i] = NA
     dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesSecurityConfigs[i] = NA
     dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesUpdating[i] = NA
  
  }
  
  
}


##################################################### 2019 ###############################################




numberOfCycles = length(dataCyberSecuritySurvey2019TidyNameSizeCyber$rules1)

dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesUpdating = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesSecurityConfigs = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesUserControl = 0


for (i in 1:numberOfCycles) {
  
  
## the code is now be faster and other hilarious jokes you can tell yourself
  
  
    if(dataCyberSecuritySurvey2019TidyNameSizeCyber$rules1[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$rules2[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$rules13[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$rules14[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$rules15[i] == 1 
       ){ ##either 1,2,13,14 and 15 
    
     dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesUpdating[i] = 1
  
    } 
      if(dataCyberSecuritySurvey2019TidyNameSizeCyber$rules3[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$rules4[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$rules9[i] == 1   #dataCyberSecuritySurvey2019TidyNameSizeCyber$rules17[i] == 1 
       ){ ##either 3,4,9 and 17 after 2019
    
     dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesSecurityConfigs[i] = 1
  
      }
  
        if(dataCyberSecuritySurvey2019TidyNameSizeCyber$rules5[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$rules7[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$rules8[i] == 1){ ##either 5,7,8
    
     dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesUserControl[i] = 1
  
        }
  
  
        if(dataCyberSecuritySurvey2019TidyNameSizeCyber$rules10[i] == 1) { 
    
     dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesUserControl[i] = NA
     dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesSecurityConfigs[i] = NA
     dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesUpdating[i] = NA
  
  }
  
  
}



##################################################### 2020 ###############################################



numberOfCycles = length(dataCyberSecuritySurvey2020TidyNameSizeCyber$rules1)

dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesUpdating = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesSecurityConfigs = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesUserControl = 0


for (i in 1:numberOfCycles) {
  
  
## the code is now be faster and other hilarious jokes you can tell yourself
  
  
    if(dataCyberSecuritySurvey2020TidyNameSizeCyber$rules1[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$rules2[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$rules13[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$rules14[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$rules15[i] == 1 
       ){ ##either 1,2,13,14 and 15 
    
     dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesUpdating[i] = 1
  
    } 
      if(dataCyberSecuritySurvey2020TidyNameSizeCyber$rules3[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$rules4[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$rules9[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$rules17[i] == 1 
       ){ ##either 3,4,9 and 17 
    
     dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesSecurityConfigs[i] = 1
  
      }
  
        if(dataCyberSecuritySurvey2020TidyNameSizeCyber$rules5[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$rules7[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$rules8[i] == 1){ ##either 5,7,8
    
     dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesUserControl[i] = 1
  
        }
  
  
        if(dataCyberSecuritySurvey2020TidyNameSizeCyber$rules10[i] == 1) { 
    
     dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesUserControl[i] = NA
     dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesSecurityConfigs[i] = NA
     dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesUpdating[i] = NA
  
  }
  
  
}

##################################################### 2021 ###############################################


numberOfCycles = length(dataCyberSecuritySurvey2021TidyNameSizeCyber$rules1)

dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesUpdating = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesSecurityConfigs = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesUserControl = 0


for (i in 1:numberOfCycles) {
  
  
## the code is now be faster and other hilarious jokes you can tell yourself
  
  
    if(dataCyberSecuritySurvey2021TidyNameSizeCyber$rules1[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$rules2[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$rules13[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$rules14[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$rules15[i] == 1 
       ){ ##either 1,2,13,14 and 15 
    
     dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesUpdating[i] = 1
  
    } 
      if(dataCyberSecuritySurvey2021TidyNameSizeCyber$rules3[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$rules4[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$rules9[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$rules17[i] == 1 
       ){ ##either 3,4,9 and 17 
    
     dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesSecurityConfigs[i] = 1
  
      }
  
        if(dataCyberSecuritySurvey2021TidyNameSizeCyber$rules5[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$rules7[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$rules8[i] == 1){ ##either 5,7,8
    
     dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesUserControl[i] = 1
  
        }
  
  
        if(dataCyberSecuritySurvey2021TidyNameSizeCyber$rules10[i] == 1) { 
    
     dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesUserControl[i] = NA
     dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesSecurityConfigs[i] = NA
     dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesUpdating[i] = NA
  
  }
  
  
}


##################################################### 2022 ###############################################


numberOfCycles = length(dataCyberSecuritySurvey2022TidyNameSizeCyber$rules1)

dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesUpdating = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesSecurityConfigs = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesUserControl = 0


for (i in 1:numberOfCycles) {
  
  ## oh my ducking god just why, this error message was worse then c++
  ##apparently if you have a missing value on an if with more than 1 parameter it shows that the missing value error is on the first parameter so in this case was rule 5, i swear not even with enough crying and praying I would have gotten there, this bull crap
  
dataCyberSecuritySurvey2022TidyNameSizeCyber$rules8[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$rules8[i], -10004)  
      dataCyberSecuritySurvey2022TidyNameSizeCyber$rules9[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$rules9[i], -10004)
      dataCyberSecuritySurvey2022TidyNameSizeCyber$rules12[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$rules12[i], -10004)
  
## the code is now be faster and other hilarious jokes you can tell yourself
  
  
    if(dataCyberSecuritySurvey2022TidyNameSizeCyber$rules1[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$rules2[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$rules13[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$rules14[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$rules15[i] == 1 
       ){ ##either 1,2,13,14 and 15 
    
     dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesUpdating[i] = 1
  
    } 
      if(dataCyberSecuritySurvey2022TidyNameSizeCyber$rules3[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$rules4[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$rules9[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$rules17[i] == 1 
       ){ ##either 3,4,9 and 17 
    
     dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesSecurityConfigs[i] = 1
  
      }
  
        if(dataCyberSecuritySurvey2022TidyNameSizeCyber$rules5[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$rules7[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$rules8[i] == 1){ ##either 5,7,8
    
     dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesUserControl[i] = 1
  
        }
  
  
        if(dataCyberSecuritySurvey2022TidyNameSizeCyber$rules10[i] == 1) { 
    
     dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesUserControl[i] = NA
     dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesSecurityConfigs[i] = NA
     dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesUpdating[i] = NA
  
  }
  
  
}


## now we can remove all those rules columns that we are no longer using

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(rules1:rules14))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(rules1:rules16))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(rules1:rules17))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(rules1:rules17))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(rules1:rules20))




```

## Policies 

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## we do a little policing but sadly not the one QoS type on cisco servers
## to be fair it would be as painful to debug 


##policy 1 - what can be stored in the removable devices
##policy 2 - remote working
##policy 3 - what staff are permitted to do on your organisations IT devices
##policy 4 - use of personally-owned devices for business activities
##policy 5 - Use of new digital technologies such as cloud computing (seriously what the hell is this question smh)
##policy 6 - data classification
##policy 7 - a Document Management System
##policy 8 - don't know (estudasses)
##policy 9 - none of these (YOLO)
##policies 10,11 and 12 were only made in 2022 but since they started using policy 11 and 12 instead of the policy 6 and 7 they will replace them 
##policy 11 - SaS (software as a service)
##policy 12 - how to store data




## TODO TODO TODO TODO unduck this mess as well because I just don't know anymore
## good news is that I have a solution, bad news is that it is not a perfect solution
## at least I won't be able to cause a stack overflow because with a precision of 53 bits, and represents to that precision a range of absolute values from about 2e-308 to 2e+308

##even better news I have a better solution that will make the code run with two legs instead of just half a leg

##policyStaffAccess - staff who is allowed to work remotely (policy 2), policing of what staff are permited to do om company devices (policy 3) and cloud computing (policy 5)
##policyData - classification of data (policy 6) and document management system (policy 7)
##policyPrivate - staff is not allowed to work on personal devices (policy 4) and cannot just store anything on removable devices (policy 1)




##################################################### 2018 ###############################################

## at this point I don't know what my code is more, poorly optimized, spaghetti or just straight up cringe

numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy1)

dataCyberSecuritySurvey2018TidyNameSizeCyber$policyStaffAccess = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$policyData = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$policyPrivate = 0


for (i in 1:numberOfCycles) {
  
  
  dataCyberSecuritySurvey2018TidyNameSizeCyber$policy1[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy1[i], -10005) 
       dataCyberSecuritySurvey2018TidyNameSizeCyber$policy2[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy2[i], -10005)
       dataCyberSecuritySurvey2018TidyNameSizeCyber$policy3[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy3[i], -10005)
       dataCyberSecuritySurvey2018TidyNameSizeCyber$policy4[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy4[i], -10005)
       dataCyberSecuritySurvey2018TidyNameSizeCyber$policy5[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy5[i], -10005)
       dataCyberSecuritySurvey2018TidyNameSizeCyber$policy6[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy6[i], -10005)
       dataCyberSecuritySurvey2018TidyNameSizeCyber$policy7[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy7[i], -10005)
       dataCyberSecuritySurvey2018TidyNameSizeCyber$policy8[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy8[i], -10005)
       dataCyberSecuritySurvey2018TidyNameSizeCyber$policy9[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy9[i], -10005)
  
  
    if(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy2[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$policy3[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$policy5[i] == 1 ){ ##either 2,3,4
    
    dataCyberSecuritySurvey2018TidyNameSizeCyber$policyStaffAccess[i] = 1  

    }else if(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy2[i] == -10005 && dataCyberSecuritySurvey2018TidyNameSizeCyber$policy3[i] == -10005 && dataCyberSecuritySurvey2018TidyNameSizeCyber$policy5[i] == -10005){
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$policyStaffAccess[i] = NA
  
    }
       
    if(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy6[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$policy7[i] == 1){ ##either 2,3,4
    
    dataCyberSecuritySurvey2018TidyNameSizeCyber$policyData[i] = 1  

    }else if(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy6[i] == -10005 && dataCyberSecuritySurvey2018TidyNameSizeCyber$policy7[i] == -10005 ){
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$policyData[i] = NA
  
    }
       
       if(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy1[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$policy4[i] == 1){ ##either 2,3,4
    
    dataCyberSecuritySurvey2018TidyNameSizeCyber$policyPrivate[i] = 1  

    }else if(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy1[i] == -10005 && dataCyberSecuritySurvey2018TidyNameSizeCyber$policy4[i] == -10005 ){
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$policyPrivate[i] = NA
  
    }
 
     if(dataCyberSecuritySurvey2018TidyNameSizeCyber$policy8[i] == 1){ ##NA
    
    dataCyberSecuritySurvey2018TidyNameSizeCyber$policyPrivate[i] = NA 
    dataCyberSecuritySurvey2018TidyNameSizeCyber$policyData[i] = NA 
    dataCyberSecuritySurvey2018TidyNameSizeCyber$policyStaffAccess[i] = NA 

    }  
             
}


##################################################### 2019 ###############################################



## at this point I don't know what my code is more, poorly optimized, spaghetti or just straight up cringe

numberOfCycles = length(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy1)

dataCyberSecuritySurvey2019TidyNameSizeCyber$policyStaffAccess = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$policyData = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$policyPrivate = 0


for (i in 1:numberOfCycles) {
  
  
 dataCyberSecuritySurvey2019TidyNameSizeCyber$policy1[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy1[i], -10005) 
       dataCyberSecuritySurvey2019TidyNameSizeCyber$policy2[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy2[i], -10005)
       dataCyberSecuritySurvey2019TidyNameSizeCyber$policy3[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy3[i], -10005)
       dataCyberSecuritySurvey2019TidyNameSizeCyber$policy4[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy4[i], -10005)
       dataCyberSecuritySurvey2019TidyNameSizeCyber$policy5[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy5[i], -10005)
       dataCyberSecuritySurvey2019TidyNameSizeCyber$policy6[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy6[i], -10005)
       dataCyberSecuritySurvey2019TidyNameSizeCyber$policy7[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy7[i], -10005)
       dataCyberSecuritySurvey2019TidyNameSizeCyber$policy8[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy8[i], -10005)
       dataCyberSecuritySurvey2019TidyNameSizeCyber$policy9[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy9[i], -10005)
 
  
    if(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy2[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$policy3[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$policy5[i] == 1 ){ ##either 2,3,4
    
    dataCyberSecuritySurvey2019TidyNameSizeCyber$policyStaffAccess[i] = 1  

    }else if(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy2[i] == -10005 && dataCyberSecuritySurvey2019TidyNameSizeCyber$policy3[i] == -10005 && dataCyberSecuritySurvey2019TidyNameSizeCyber$policy5[i] == -10005){
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$policyStaffAccess[i] = NA
  
    }
       
    if(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy6[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$policy7[i] == 1){ ##either 2,3,4
    
    dataCyberSecuritySurvey2019TidyNameSizeCyber$policyData[i] = 1  

    }else if(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy6[i] == -10005 && dataCyberSecuritySurvey2019TidyNameSizeCyber$policy7[i] == -10005 ){
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$policyData[i] = NA
  
    }
       
       if(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy1[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$policy4[i] == 1){ ##either 2,3,4
    
    dataCyberSecuritySurvey2019TidyNameSizeCyber$policyPrivate[i] = 1  

    }else if(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy1[i] == -10005 && dataCyberSecuritySurvey2019TidyNameSizeCyber$policy4[i] == -10005 ){
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$policyPrivate[i] = NA
  
    }
 
     if(dataCyberSecuritySurvey2019TidyNameSizeCyber$policy8[i] == 1){ ##NA
    
    dataCyberSecuritySurvey2019TidyNameSizeCyber$policyPrivate[i] = NA 
    dataCyberSecuritySurvey2019TidyNameSizeCyber$policyData[i] = NA 
    dataCyberSecuritySurvey2019TidyNameSizeCyber$policyStaffAccess[i] = NA 

    }  
             
}


##################################################### 2020 ###############################################



## at this point I don't know what my code is more, poorly optimized, spaghetti or just straight up cringe

numberOfCycles = length(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy1)

dataCyberSecuritySurvey2020TidyNameSizeCyber$policyStaffAccess = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$policyData = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$policyPrivate = 0


for (i in 1:numberOfCycles) {
  
  
 dataCyberSecuritySurvey2020TidyNameSizeCyber$policy1[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy1[i], -10005) 
       dataCyberSecuritySurvey2020TidyNameSizeCyber$policy2[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy2[i], -10005)
       dataCyberSecuritySurvey2020TidyNameSizeCyber$policy3[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy3[i], -10005)
       dataCyberSecuritySurvey2020TidyNameSizeCyber$policy4[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy4[i], -10005)
       dataCyberSecuritySurvey2020TidyNameSizeCyber$policy5[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy5[i], -10005)
       dataCyberSecuritySurvey2020TidyNameSizeCyber$policy6[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy6[i], -10005)
       dataCyberSecuritySurvey2020TidyNameSizeCyber$policy7[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy7[i], -10005)
       dataCyberSecuritySurvey2020TidyNameSizeCyber$policy8[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy8[i], -10005)
       dataCyberSecuritySurvey2020TidyNameSizeCyber$policy9[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy9[i], -10005)
       
  
    if(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy2[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$policy3[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$policy5[i] == 1 ){ ##either 2,3,4
    
    dataCyberSecuritySurvey2020TidyNameSizeCyber$policyStaffAccess[i] = 1  

    }else if(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy2[i] == -10005 && dataCyberSecuritySurvey2020TidyNameSizeCyber$policy3[i] == -10005 && dataCyberSecuritySurvey2020TidyNameSizeCyber$policy5[i] == -10005){
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$policyStaffAccess[i] = NA
  
    }
       
    if(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy6[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$policy7[i] == 1){ ##either 2,3,4
    
    dataCyberSecuritySurvey2020TidyNameSizeCyber$policyData[i] = 1  

    }else if(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy6[i] == -10005 && dataCyberSecuritySurvey2020TidyNameSizeCyber$policy7[i] == -10005 ){
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$policyData[i] = NA
  
    }
       
       if(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy1[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$policy4[i] == 1){ ##either 2,3,4
    
    dataCyberSecuritySurvey2020TidyNameSizeCyber$policyPrivate[i] = 1  

    }else if(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy1[i] == -10005 && dataCyberSecuritySurvey2020TidyNameSizeCyber$policy4[i] == -10005 ){
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$policyPrivate[i] = NA
  
    }
 
     if(dataCyberSecuritySurvey2020TidyNameSizeCyber$policy8[i] == 1){ ##NA
    
    dataCyberSecuritySurvey2020TidyNameSizeCyber$policyPrivate[i] = NA 
    dataCyberSecuritySurvey2020TidyNameSizeCyber$policyData[i] = NA 
    dataCyberSecuritySurvey2020TidyNameSizeCyber$policyStaffAccess[i] = NA 

    }  
             
}

##################################################### 2021 ###############################################



## at this point I don't know what my code is more, poorly optimized, spaghetti or just straight up cringe

numberOfCycles = length(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy1)

dataCyberSecuritySurvey2021TidyNameSizeCyber$policyStaffAccess = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$policyData = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$policyPrivate = 0


for (i in 1:numberOfCycles) {
  
  
dataCyberSecuritySurvey2021TidyNameSizeCyber$policy1[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy1[i], -10005) 
       dataCyberSecuritySurvey2021TidyNameSizeCyber$policy2[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy2[i], -10005)
       dataCyberSecuritySurvey2021TidyNameSizeCyber$policy3[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy3[i], -10005)
       dataCyberSecuritySurvey2021TidyNameSizeCyber$policy4[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy4[i], -10005)
       dataCyberSecuritySurvey2021TidyNameSizeCyber$policy5[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy5[i], -10005)
       dataCyberSecuritySurvey2021TidyNameSizeCyber$policy6[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy6[i], -10005)
       dataCyberSecuritySurvey2021TidyNameSizeCyber$policy7[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy7[i], -10005)
       dataCyberSecuritySurvey2021TidyNameSizeCyber$policy8[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy8[i], -10005)
       dataCyberSecuritySurvey2021TidyNameSizeCyber$policy9[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy9[i], -10005)
       
     
  
    if(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy2[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$policy3[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$policy5[i] == 1 ){ ##either 2,3,4
    
    dataCyberSecuritySurvey2021TidyNameSizeCyber$policyStaffAccess[i] = 1  

    }else if(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy2[i] == -10005 && dataCyberSecuritySurvey2021TidyNameSizeCyber$policy3[i] == -10005 && dataCyberSecuritySurvey2021TidyNameSizeCyber$policy5[i] == -10005){
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$policyStaffAccess[i] = NA
  
    }
       
    if(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy6[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$policy7[i] == 1){ ##either 2,3,4
    
    dataCyberSecuritySurvey2021TidyNameSizeCyber$policyData[i] = 1  

    }else if(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy6[i] == -10005 && dataCyberSecuritySurvey2021TidyNameSizeCyber$policy7[i] == -10005 ){
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$policyData[i] = NA
  
    }
       
       if(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy1[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$policy4[i] == 1){ ##either 2,3,4
    
    dataCyberSecuritySurvey2021TidyNameSizeCyber$policyPrivate[i] = 1  

    }else if(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy1[i] == -10005 && dataCyberSecuritySurvey2021TidyNameSizeCyber$policy4[i] == -10005 ){
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$policyPrivate[i] = NA
  
    }
 
     if(dataCyberSecuritySurvey2021TidyNameSizeCyber$policy8[i] == 1){ ##NA
    
    dataCyberSecuritySurvey2021TidyNameSizeCyber$policyPrivate[i] = NA 
    dataCyberSecuritySurvey2021TidyNameSizeCyber$policyData[i] = NA 
    dataCyberSecuritySurvey2021TidyNameSizeCyber$policyStaffAccess[i] = NA 

    }  
             
}


##################################################### 2022 ###############################################


## at this point I don't know what my code is more, poorly optimized, spaghetti or just straight up cringe

numberOfCycles = length(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy1)

dataCyberSecuritySurvey2022TidyNameSizeCyber$policyStaffAccess = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$policyData = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$policyPrivate = 0


for (i in 1:numberOfCycles) {
  
  
dataCyberSecuritySurvey2022TidyNameSizeCyber$policy1[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy1[i], -10005) 
       dataCyberSecuritySurvey2022TidyNameSizeCyber$policy2[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy2[i], -10005)
       dataCyberSecuritySurvey2022TidyNameSizeCyber$policy3[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy3[i], -10005)
       dataCyberSecuritySurvey2022TidyNameSizeCyber$policy4[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy4[i], -10005)
       dataCyberSecuritySurvey2022TidyNameSizeCyber$policy5[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy5[i], -10005)
       dataCyberSecuritySurvey2022TidyNameSizeCyber$policy11[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy11[i], -10005)
       dataCyberSecuritySurvey2022TidyNameSizeCyber$policy12[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy12[i], -10005)
       dataCyberSecuritySurvey2022TidyNameSizeCyber$policy8[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy8[i], -10005)
       dataCyberSecuritySurvey2022TidyNameSizeCyber$policy9[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy9[i], -10005)
       
     
  
    if(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy2[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$policy3[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$policy5[i] == 1 ){ ##either 2,3,4
    
    dataCyberSecuritySurvey2022TidyNameSizeCyber$policyStaffAccess[i] = 1  

    }else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy2[i] == -10005 && dataCyberSecuritySurvey2022TidyNameSizeCyber$policy3[i] == -10005 && dataCyberSecuritySurvey2022TidyNameSizeCyber$policy5[i] == -10005){
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$policyStaffAccess[i] = NA
  
    }
       
    if(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy11[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$policy12[i] == 1){ ##either 2,3,4
    
    dataCyberSecuritySurvey2022TidyNameSizeCyber$policyData[i] = 1  

    }else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy11[i] == -10005 && dataCyberSecuritySurvey2022TidyNameSizeCyber$policy12[i] == -10005 ){
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$policyData[i] = NA
  
    }
       
       if(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy1[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$policy4[i] == 1){ ##either 2,3,4
    
    dataCyberSecuritySurvey2022TidyNameSizeCyber$policyPrivate[i] = 1  

    }else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy1[i] == -10005 && dataCyberSecuritySurvey2022TidyNameSizeCyber$policy4[i] == -10005 ){
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$policyPrivate[i] = NA
  
    }
 
     if(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy8[i] == 1){ ##NA
    
    dataCyberSecuritySurvey2022TidyNameSizeCyber$policyPrivate[i] = NA 
    dataCyberSecuritySurvey2022TidyNameSizeCyber$policyData[i] = NA 
    dataCyberSecuritySurvey2022TidyNameSizeCyber$policyStaffAccess[i] = NA 

    }  
             
}


##another day of garbage collection of unused columns

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(policy1:policy9))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(policy1:policy9))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(policy1:policy9))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(policy1:policy9))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(policy1:policy12))


```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}

## taking care of the columns that are only in the 2018 survey 

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(doc1:doc6))

##removing the question about if they know about the 10 steps for cyber security 
##Spoiler alert: knowing about it doesnt mean you apply it and you can learn about it from other sources either way
#https://www.ncsc.gov.uk/collection/10-steps/risk-management

##same for the next question about the cyber essential scheme

##nevermind they removed all the rest of the questions until business standard on 2019 and 2020 (Q43)

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(tensteps:implemb))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(tensteps:implemb))

## TODO: think if I should keep the review of cyber security documentation colum
## removing it since i don't have it on 2018 and I don't think I will be using it

dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-review)
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-review)
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-review)
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-review)

## in 2022 they asked some proper questions about cyber security training and cyber security strategy that will be removed for lack of comparrison with the other years

dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(trained:corprisk))


##Removing the question about cyber security conserns in the suppliers because 
##1 - most institutions evaluated here won't be in a scale where that is an important question
##2 - if you were a big institution you would just have taken of most of the inside managed and now would worry about the suppliers on that level you will just get multiple suppliers in case your main supplier fails removing the SPOF(single point of failure) that way 
##like what would they do anyway such a poorly written question, just hire me to write next year survey instead

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-supply)

dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-supply)

dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(supplyrisk1:supplyrisk2))

dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(supplyrisk1:supplyrisk2))

dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(supplyrisk1:supplyrisk2))

##questions about supplier standards were deleted after 2019

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(adhere1:cloud))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(adhere1:cloud))

## only asked in 2022 so not relevant for comparrison

dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(barrier1:barrier8))

```

##Type of attacks

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
##type of attacks that targetted the institution
##type 01 - ramsomware infection
##type 02 - spyware, malware or other type of infection
##type 03 - DDOS (distributed denial of service)
##type 04 - hacking online bank accounts
##type 05 - phising - impersonating your organisation
##type 06 - phising - fraudulent emails or website targetting staff
##type 07 - unauthorized access by internal staff members
##type 08 - unauthorized access by outsiders
##type 09 - other type of cyber attacks
##type 10 - don't know
##type 11 - (don't care) none of these
##type 12 - refused to answer
##type 13 - unauthorized access by students (to be merged with type 7) // only used starting from 2022
## type 15 and 16 were only collect in 2022 so not to be compared and type 14 just does not exist for some reason

##time to some non-git merges on the variables

##attackInfection - ramsomware infection (type 1), spyware, malware and other types (type 2), DDOS (type 3)
##attackPhising - hacking online bank accounts (type 4), phising - impersonating organisation (type 5), phising - fraudulent emails or websites (phising 6)
##attackBreaching - unauthorized access internal staff (type 7), unauthorized access outsiders (type 8), unauthorized access by students (type 13 only in 2022)
##remember that type 10 and 12 is missing data


##################################################### 2018 ###############################################

numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$type1)

dataCyberSecuritySurvey2018TidyNameSizeCyber$attackInfection = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackPhising = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackBreaching = 0

for (i in 1:numberOfCycles) {

  
    if(dataCyberSecuritySurvey2018TidyNameSizeCyber$type1[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type2[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type3[i] == 1 ){ ##either 1,2,3
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$attackInfection[i] = 1
      
    }
  
      if(dataCyberSecuritySurvey2018TidyNameSizeCyber$type4[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type5[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type6[i] == 1 ){ ##either 5,4,6
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$attackPhising[i] = 1
      
      }
  
      if(dataCyberSecuritySurvey2018TidyNameSizeCyber$type7[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type8[i] == 1){ 
        
      dataCyberSecuritySurvey2018TidyNameSizeCyber$attackBreaching[i] = 1
      
      }
  
  
      if(
        ##dataCyberSecuritySurvey2018TidyNameSizeCyber$type1[i] == 9 ||
        dataCyberSecuritySurvey2018TidyNameSizeCyber$type10[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type12[i] == 1 ){ ##either 9,10,12
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$attackPhising[i] = NA
      dataCyberSecuritySurvey2018TidyNameSizeCyber$attackBreaching[i] = NA
      dataCyberSecuritySurvey2018TidyNameSizeCyber$attackInfection[i] = NA
      
      }
      
      ## basically if we only know they got other type of attacks (policy 9 then we know the type of attacks we record didn't happen but we don't have any data on those which is ok since we weren't collecting them anyway) //keep this comment on all or I will garantee I will forget it
      
  
}


##################################################### 2019 ###############################################


numberOfCycles = length(dataCyberSecuritySurvey2019TidyNameSizeCyber$type1)

dataCyberSecuritySurvey2019TidyNameSizeCyber$attackInfection = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackPhising = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackBreaching = 0

for (i in 1:numberOfCycles) {

  
    if(dataCyberSecuritySurvey2019TidyNameSizeCyber$type1[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type2[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type3[i] == 1 ){ ##either 1,2,3
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$attackInfection[i] = 1
      
    }
  
      if(dataCyberSecuritySurvey2019TidyNameSizeCyber$type4[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type5[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type6[i] == 1 ){ ##either 5,4,6
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$attackPhising[i] = 1
      
      }
  
      if(dataCyberSecuritySurvey2019TidyNameSizeCyber$type7[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type8[i] == 1){ 
        
      dataCyberSecuritySurvey2019TidyNameSizeCyber$attackBreaching[i] = 1
      
      }
  
  
      if(
        ##dataCyberSecuritySurvey2019TidyNameSizeCyber$type1[i] == 9 ||
        dataCyberSecuritySurvey2019TidyNameSizeCyber$type10[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type12[i] == 1 ){ ##either 9,10,12
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$attackPhising[i] = NA
      dataCyberSecuritySurvey2019TidyNameSizeCyber$attackBreaching[i] = NA
      dataCyberSecuritySurvey2019TidyNameSizeCyber$attackInfection[i] = NA
      
      }
      
      ## basically if we only know they got other type of attacks (policy 9 then we know the type of attacks we record didn't happen but we don't have any data on those which is ok since we weren't collecting them anyway) //keep this comment on all or I will garantee I will forget it
      
  
}


##################################################### 2020 ###############################################


numberOfCycles = length(dataCyberSecuritySurvey2020TidyNameSizeCyber$type1)

dataCyberSecuritySurvey2020TidyNameSizeCyber$attackInfection = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackPhising = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackBreaching = 0

for (i in 1:numberOfCycles) {

  
    if(dataCyberSecuritySurvey2020TidyNameSizeCyber$type1[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type2[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type3[i] == 1 ){ ##either 1,2,3
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$attackInfection[i] = 1
      
    }
  
      if(dataCyberSecuritySurvey2020TidyNameSizeCyber$type4[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type5[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type6[i] == 1 ){ ##either 5,4,6
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$attackPhising[i] = 1
      
      }
  
      if(dataCyberSecuritySurvey2020TidyNameSizeCyber$type7[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type8[i] == 1){ 
        
      dataCyberSecuritySurvey2020TidyNameSizeCyber$attackBreaching[i] = 1
      
      }
  
  
      if(
        ##dataCyberSecuritySurvey2020TidyNameSizeCyber$type1[i] == 9 ||
        dataCyberSecuritySurvey2020TidyNameSizeCyber$type10[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type12[i] == 1 ){ ##either 9,10,12
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$attackPhising[i] = NA
      dataCyberSecuritySurvey2020TidyNameSizeCyber$attackBreaching[i] = NA
      dataCyberSecuritySurvey2020TidyNameSizeCyber$attackInfection[i] = NA
      
      }
      
      ## basically if we only know they got other type of attacks (policy 9 then we know the type of attacks we record didn't happen but we don't have any data on those which is ok since we weren't collecting them anyway) //keep this comment on all or I will garantee I will forget it
      
  
}


##################################################### 2021 ###############################################


numberOfCycles = length(dataCyberSecuritySurvey2021TidyNameSizeCyber$type1)

dataCyberSecuritySurvey2021TidyNameSizeCyber$attackInfection = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackPhising = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackBreaching = 0

for (i in 1:numberOfCycles) {

  
    if(dataCyberSecuritySurvey2021TidyNameSizeCyber$type1[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type2[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type3[i] == 1 ){ ##either 1,2,3
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$attackInfection[i] = 1
      
    }
  
      if(dataCyberSecuritySurvey2021TidyNameSizeCyber$type4[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type5[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type6[i] == 1 ){ ##either 5,4,6
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$attackPhising[i] = 1
      
      }
  
      if(dataCyberSecuritySurvey2021TidyNameSizeCyber$type7[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type8[i] == 1){ 
        
      dataCyberSecuritySurvey2021TidyNameSizeCyber$attackBreaching[i] = 1
      
      }
  
  
      if(
        ##dataCyberSecuritySurvey2020TidyNameSizeCyber$type1[i] == 9 ||
        dataCyberSecuritySurvey2021TidyNameSizeCyber$type10[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type12[i] == 1 ){ ##either 9,10,12
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$attackPhising[i] = NA
      dataCyberSecuritySurvey2021TidyNameSizeCyber$attackBreaching[i] = NA
      dataCyberSecuritySurvey2021TidyNameSizeCyber$attackInfection[i] = NA
      
      }
      
      ## basically if we only know they got other type of attacks (policy 9 then we know the type of attacks we record didn't happen but we don't have any data on those which is ok since we weren't collecting them anyway) //keep this comment on all or I will guarantee I will forget it
      
  
}


##################################################### 2022 ###############################################

numberOfCycles = length(dataCyberSecuritySurvey2022TidyNameSizeCyber$type1)

dataCyberSecuritySurvey2022TidyNameSizeCyber$attackInfection = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackPhising = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching = 0

for (i in 1:numberOfCycles) {

  
    if(dataCyberSecuritySurvey2022TidyNameSizeCyber$type1[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type2[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type3[i] == 1 ){ ##either 1,2,3
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$attackInfection[i] = 1
      
    }
  
      if(dataCyberSecuritySurvey2022TidyNameSizeCyber$type4[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type5[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type6[i] == 1 ){ ##either 5,4,6
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$attackPhising[i] = 1
      
      }
  
      if(dataCyberSecuritySurvey2022TidyNameSizeCyber$type7[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type8[i] == 1){ 
        
      dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching[i] = 1
      
      }
  
  
      if(
        ##dataCyberSecuritySurvey2020TidyNameSizeCyber$type1[i] == 9 ||
        dataCyberSecuritySurvey2022TidyNameSizeCyber$type10[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type12[i] == 1 ){ ##either 9,10,12
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$attackPhising[i] = NA
      dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching[i] = NA
      dataCyberSecuritySurvey2022TidyNameSizeCyber$attackInfection[i] = NA
      
      }
      
      ## basically if we only know they got other type of attacks (policy 9 then we know the type of attacks we record didn't happen but we don't have any data on those which is ok since we weren't collecting them anyway) //keep this comment on all or I will guarantee I will forget it
      
  
}


dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(type1:type12))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(type1:type12))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(type1:type13))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(type1:type13))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(type1:type16))


## i think I will also remove the frequency of the attack since I won't be using them for anything and also removing the  //TODO review this choice

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(freq:numbb))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(freq:numbb))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-freq)
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-freq)
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-freq)

## now to register both outcome and impact

```

## Outcomes - we check for each of the attack outcoems and group them

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
##for the frequency of attacks in the last 12 months I am not sure if I am interested in that data
##TODO I am temporary removing them if I can add thhem back if needed (more interested in the outcome of the attacks)

##outcomes from the attacks
##outcome 01 - Software or systems were corrupted or damaged (permanent DDOS)
##outcome 02 - Personal data was altered, destroyed or taken
##outcome 03 - Permanent loss of files (other than personal data)
##outcome 04 - Temporary loss of access to files or networks
##outcome 05 - Lost or stolen assets, trade secrets or intellectual property
##outcome 06 - Money was stolen
##outcome 07 - (DDOS) website or online services were taken down or made slower 
##outcome 08 - Lost access to any third-party services you rely on
##outcome 09 - Don't know (NA)
##outcome 10 - none of these
##outcome 11,12 and 13 are only present in 2022 so we won't use them to make comparisons


## as the lord and savior Dr Mark Kelson has preached to me on you shall merge the multiple outcomes into smaller ones to have better correlations
## If you are reading this one mark don't forget my extra points for that one time I had to turn on the system in the computer lab because it was turned off the the professors assistants weren't there yet
##to comment it all its ctr+shift+c #FicaADica

##outcomesData - is a combination of personal data was altered (outcome2), temporary or permanent loss of access to files (outcome 3 and 4)
##outcomesDDOS - websites or online service was taken down or made slower (outcome 7), lost access to any third party services (outcome 8) and software or system corruption and damaged (permanent DDOS) (outcome1)
##outcomesTheft - lost or stolen assets, trade secrets or intellectual property (outcome 5) and stolen money (outcome 6)




##################################################### 2018 ###############################################


numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome1)

dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesData = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesDDOS = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesTheft = 0



for (i in 1:numberOfCycles) {
  
      dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome1[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome1[i], -10007)
    dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome2[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome2[i], -10007)
    dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome3[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome3[i], -10007)
    dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome4[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome4[i], -10007)
    dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome5[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome5[i], -10007)
    dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome6[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome6[i], -10007)
    dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome7[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome7[i], -10007)
    dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome8[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome8[i], -10007)
    dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome10[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome9[i], -10007)
    dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome9[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome10[i], -10007)
  
    
    ## my probably pathetic attempt to optimize my loops to not get a 10 minute compilation #my toast runs slower than a toaster, and toasters don't even have legs to run 
    
    
  if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome1[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome7[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome8[i] == 1){ ##either 1,7,8
    
     dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesDDOS[i] = 1
  
     
     } else if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome1[i] == -10007 && dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome7[i] == -10007 && dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome8[i] == -10007){
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesDDOS[i] = NA
      }
  
  
    if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome2[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome3[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome4[i] == 1){ ##either 2,3,4
    
     dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesData[i] = 1
    
     
     } else if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome2[i] == -10007 && dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome3[i] == -10007 && dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome4[i] == -10007){
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesData[i] = NA
     }
    
  
      if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome5[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome6[i] == 1){ ##either 5 or 6
    
     dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesTheft[i] = 1
     
     
      } else if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome5[i] == -10007 && dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome6[i] == -10007) {
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesTheft[i] = NA
      }
    
    if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome9[i] == 1) {
      
      dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesTheft[i] = NA
      dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesData[i] = NA
      dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesDDOS[i] = NA
      }

}






##################################################### 2019 ###############################################


numberOfCycles = length(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome1)

dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesData = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesDDOS = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesTheft = 0

for (i in 1:numberOfCycles) {
  

    dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome1[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome1[i], -10007)
    dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome2[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome2[i], -10007)
    dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome3[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome3[i], -10007)
    dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome4[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome4[i], -10007)
    dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome5[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome5[i], -10007)
    dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome6[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome6[i], -10007)
    dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome7[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome7[i], -10007)
    dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome8[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome8[i], -10007)
    dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome9[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome9[i], -10007)
    dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome10[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome10[i], -10007)
    
    
    ## my probably pathetic attempt to optimize my loops to not get a 10 minute compilation #my toast runs slower than a toaster, and toasters don't even have legs to run 
    
    
    if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome1[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome7[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome8[i] == 1){ ##either 1,7,8
    
     dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesDDOS[i] = 1
  
     
     } else if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome1[i] == -10007 && dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome7[i] == -10007 && dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome8[i] == -10007){
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesDDOS[i] = NA
      }
  
  
    if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome2[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome3[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome4[i] == 1){ ##either 2,3,4
    
     dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesData[i] = 1
    
     
     } else if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome2[i] == -10007 && dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome3[i] == -10007 && dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome4[i] == -10007){
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesData[i] = NA
     }
    
  
      if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome5[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome6[i] == 1){ ##either 5 or 6
    
     dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesTheft[i] = 1
     
     
      } else if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome5[i] == -10007 && dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome6[i] == -10007) {
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesTheft[i] = NA
      }
    
        if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome9[i] == 1) {
      
      dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesTheft[i] = NA
      dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesData[i] = NA
      dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesDDOS[i] = NA
      }
    
  
} 

##################################################### 2020 ###############################################

numberOfCycles = length(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome1)

dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesData = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesDDOS = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesTheft = 0

for (i in 1:numberOfCycles) {
  

    dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome1[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome1[i], -10007)
    dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome2[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome2[i], -10007)
    dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome3[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome3[i], -10007)
    dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome4[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome4[i], -10007)
    dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome5[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome5[i], -10007)
    dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome6[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome6[i], -10007)
    dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome7[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome7[i], -10007)
    dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome8[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome8[i], -10007)
    dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome9[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome9[i], -10007)
    dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome10[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome10[i], -10007)
    
    
    ## my probably pathetic attempt to optimize my loops to not get a 10 minute compilation #my toast runs slower than a toaster, and toasters don't even have legs to run 
    
    
    if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome1[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome7[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome8[i] == 1){ ##either 1,7,8
    
     dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesDDOS[i] = 1
  
     
     } else if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome1[i] == -10007 && dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome7[i] == -10007 && dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome8[i] == -10007){
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesDDOS[i] = NA
      }
  
  
    if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome2[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome3[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome4[i] == 1){ ##either 2,3,4
    
     dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesData[i] = 1
    
     
     } else if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome2[i] == -10007 && dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome3[i] == -10007 && dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome4[i] == -10007){
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesData[i] = NA
     }
    
  
      if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome5[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome6[i] == 1){ ##either 5 or 6
    
     dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesTheft[i] = 1
     
     
      } else if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome5[i] == -10007 && dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome6[i] == -10007) {
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesTheft[i] = NA
     }    
        if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome9[i] == 1) {
      
      dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesTheft[i] = NA
      dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesData[i] = NA
      dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesDDOS[i] = NA
      }    
  
} 


##################################################### 2021 ###############################################


numberOfCycles = length(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome1)

dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft = 0

for (i in 1:numberOfCycles) {

    dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome1[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome1[i], -10007)
    dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome2[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome2[i], -10007)
    dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome3[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome3[i], -10007)
    dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome4[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome4[i], -10007)
    dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome5[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome5[i], -10007)
    dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome6[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome6[i], -10007)
    dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome7[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome7[i], -10007)
    dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome8[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome8[i], -10007)
    dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome9[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome9[i], -10007)
    dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome10[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome10[i], -10007)

    ## my probably pathetic attempt to optimize my loops to not get a 10 minute compilation #my toast runs slower than a toaster, and toasters don't even have legs to run
    
    
    if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome1[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome7[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome8[i] == 1){ ##either 1,7,8
    
     dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i] = 1
  
     
     } else if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome1[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome7[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome8[i] == -10007){
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i] = NA
      }
  
  
    if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome2[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome3[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome4[i] == 1){ ##either 2,3,4
    
     dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] = 1
    
     
     } else if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome2[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome3[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome4[i] == -10007){
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] = NA
     }
    
  
      if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome5[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome6[i] == 1){ ##either 5 or 6
    
     dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] = 1
     
     
      } else if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome5[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome6[i] == -10007) {
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] = NA
     }    
        if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome9[i] == 1) {
      
      dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] = NA
      dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] = NA
      dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i] = NA
      }    
  
} 



##################################################### 2022 ###############################################



numberOfCycles = length(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome1)

dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesData = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesDDOS = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesTheft = 0

for (i in 1:numberOfCycles) {

    dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome1[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome1[i], -10007)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome2[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome2[i], -10007)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome3[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome3[i], -10007)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome4[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome4[i], -10007)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome5[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome5[i], -10007)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome6[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome6[i], -10007)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome7[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome7[i], -10007)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome8[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome8[i], -10007)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome9[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome9[i], -10007)
    dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome10[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome10[i], -10007)

    ## my probably pathetic attempt to optimize my loops to not get a 10 minute compilation #my toast runs slower than a toaster, and toasters don't even have legs to run
    ##if anyone asks yes I started from bottom to top but I can and I love see my pc dying compiling my poorly optimized code
    
    
    if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome1[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome7[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome8[i] == 1){ ##either 1,7,8
    
     dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesDDOS[i] = 1
  
     
     } else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome1[i] == -10007 && dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome7[i] == -10007 && dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome8[i] == -10007){
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesDDOS[i] = NA
      }
  
  
    if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome2[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome3[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome4[i] == 1){ ##either 2,3,4
    
     dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesData[i] = 1
    
     
     } else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome2[i] == -10007 && dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome3[i] == -10007 && dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome4[i] == -10007){
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesData[i] = NA
     }
    
  
      if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome5[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome6[i] == 1){ ##either 5 or 6
    
     dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesTheft[i] = 1
     
     
      } else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome5[i] == -10007 && dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome6[i] == -10007) {
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesTheft[i] = NA
     }    
        if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome9[i] == 1) {
      
      dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesTheft[i] = NA
      dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesData[i] = NA
      dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesDDOS[i] = NA
      }    
  
} 




dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(outcome1:outcome10))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(outcome1:outcome10))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(outcome1:outcome10))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(outcome1:outcome10))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(outcome1:outcome13))



```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}

## we have now finished checking the outcome of these attacks as the last relevant parameter we will analyse so we will now cleanse the dataset of all the other unnecessary data

## the costs have too much in different and missing data, it is better not to use them, no way josé


## removing the costs here as well, not opening another Pandora box so close to the deadline
dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(impact1:weight))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(impact1:weight))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(impact1:weight))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(impact1:weight))


dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(impact1:Sum10Steps))


dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(halfa:weight))


## we also won't be looking at which country inside the uk the charities belong

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-country)
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-country)
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-country)
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-country)
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-country)

## we also won't be using the charity income data


dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-income)
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-one_of('income','income2'))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-one_of('income','income2'))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-one_of('income','income2'))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-one_of('income','income2'))

##cleaning 2018 specific

dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(charityo:core))

##removing last year specific
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-title)

## hold up why do I bother having typex when any of the others years don't
#dataCyberSecuritySurvey2022TidyNameSizeCyber$typex = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$typex)
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-typex)

##recorded time of death 22:53 9/11/2022, cause :
## realized I had the 2021 variable pointing to the 2020 file this entire time
## this is what we call being dumber than a door #estudasses

dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(title1:title19))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(online12:online13))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(scheme6:outcome13))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-covpri)



```

## Labelling Conversion

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
##Now we have all the data wrangled ready we will preparing for it to be imputated


summary(dataCyberSecuritySurvey2018TidyNameSizeCyber)
summary(dataCyberSecuritySurvey2019TidyNameSizeCyber)
summary(dataCyberSecuritySurvey2020TidyNameSizeCyber)
summary(dataCyberSecuritySurvey2021TidyNameSizeCyber)
summary(dataCyberSecuritySurvey2022TidyNameSizeCyber)


## I want to cry but at least I have a solution that will just take me a few more hours to implement
## we will have to delabbel and then clean most of the labels from the 
## maybe I over reacted a bit, maybe

```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72), echo=FALSE}
## I want to cry but at least I have a solution that will just take me a few more hours to implement
## we will have to delabbel and then clean all the labels from the 

# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$update = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$update)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$priority = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$priority)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$sizeb = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$sizeb)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$typex = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$typex)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$sizea = as.numeric(dataCyberSecuritySurvey2022TidyNameSizeCyber$sizea)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$imid = as.character(dataCyberSecuritySurvey2022TidyNameSizeCyber$imid)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$damagedirsx_bands = as.numeric(dataCyberSecuritySurvey2022TidyNameSizeCyber$damagedirsx_bands)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$damagedirlx_bands = as.numeric(dataCyberSecuritySurvey2022TidyNameSizeCyber$damagedirlx_bands)
# 
# missmap(dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled)
# 
# 
# str(dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled)

# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$priority = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$priority)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$sizeb = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$sizeb)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$typex = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$typex)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$sizea = as.numeric(dataCyberSecuritySurvey2022TidyNameSizeCyber$sizea)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$imid = as.character(dataCyberSecuritySurvey2022TidyNameSizeCyber$imid)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$damagedirsx_bands = as.numeric(dataCyberSecuritySurvey2022TidyNameSizeCyber$damagedirsx_bands)
# 
# dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled$damagedirlx_bands = as.numeric(dataCyberSecuritySurvey2022TidyNameSizeCyber$damagedirlx_bands)
# 
# missmap(dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled)
# 
# 
# str(dataCyberSecuritySurvey2022TidyNameSizeCyberUnlabelled)

```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}

###################################################### 2022 ##########################################

## perfect factorizationa and numeric conversion removing all the problematic labels for imputation 
dataCyberSecuritySurvey2022TidyNameSizeCyber$instituitionTypes = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$instituitionTypes)

dataCyberSecuritySurvey2022TidyNameSizeCyber$sizea = as.numeric(dataCyberSecuritySurvey2022TidyNameSizeCyber$sizea)

dataCyberSecuritySurvey2022TidyNameSizeCyber$sizeb = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$sizeb)

dataCyberSecuritySurvey2022TidyNameSizeCyber$priority = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$priority)

dataCyberSecuritySurvey2022TidyNameSizeCyber$update = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$update)

dataCyberSecuritySurvey2022TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$managementContinuity)

dataCyberSecuritySurvey2022TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$managementContinuity)

dataCyberSecuritySurvey2022TidyNameSizeCyber$year = as.numeric(dataCyberSecuritySurvey2022TidyNameSizeCyber$year)

dataCyberSecuritySurvey2022TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$managementContinuity)
dataCyberSecuritySurvey2022TidyNameSizeCyber$managementCyber= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$managementCyber)
dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesUpdating= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesUpdating)
dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesUserControl= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesUserControl)
dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesSecurityConfigs= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$rulesSecurityConfigs)
dataCyberSecuritySurvey2022TidyNameSizeCyber$policyStaffAccess= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$policyStaffAccess)
dataCyberSecuritySurvey2022TidyNameSizeCyber$policyData= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$policyData)
dataCyberSecuritySurvey2022TidyNameSizeCyber$policyPrivate= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$policyPrivate)
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackInfection= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$attackInfection)
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackPhising= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$attackPhising)
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesData= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesData)
dataCyberSecuritySurvey2022TidyNameSizeCyber$ outcomesDDOS= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$ outcomesDDOS)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesTheft= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesTheft)


str(dataCyberSecuritySurvey2022TidyNameSizeCyber)

###################################################### 2021 ##########################################

## perfect factorizationa and numeric conversion removing all the problematic labels for imputation 
dataCyberSecuritySurvey2021TidyNameSizeCyber$instituitionTypes = as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$instituitionTypes)

dataCyberSecuritySurvey2021TidyNameSizeCyber$sizea = as.numeric(dataCyberSecuritySurvey2021TidyNameSizeCyber$sizea)

dataCyberSecuritySurvey2021TidyNameSizeCyber$sizeb = as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$sizeb)

dataCyberSecuritySurvey2021TidyNameSizeCyber$priority = as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$priority)

dataCyberSecuritySurvey2021TidyNameSizeCyber$update = as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$update)

dataCyberSecuritySurvey2021TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$managementContinuity)

dataCyberSecuritySurvey2021TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$managementContinuity)

dataCyberSecuritySurvey2021TidyNameSizeCyber$year = as.numeric(dataCyberSecuritySurvey2021TidyNameSizeCyber$year)

dataCyberSecuritySurvey2021TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$managementContinuity)
dataCyberSecuritySurvey2021TidyNameSizeCyber$managementCyber= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$managementCyber)
dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesUpdating= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesUpdating)
dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesUserControl= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesUserControl)
dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesSecurityConfigs= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$rulesSecurityConfigs)
dataCyberSecuritySurvey2021TidyNameSizeCyber$policyStaffAccess= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$policyStaffAccess)
dataCyberSecuritySurvey2021TidyNameSizeCyber$policyData= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$policyData)
dataCyberSecuritySurvey2021TidyNameSizeCyber$policyPrivate= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$policyPrivate)
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackInfection= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$attackInfection)
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackPhising= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$attackPhising)
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackBreaching= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$attackBreaching)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData)
dataCyberSecuritySurvey2021TidyNameSizeCyber$ outcomesDDOS= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$ outcomesDDOS)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft= as.factor(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft)


str(dataCyberSecuritySurvey2021TidyNameSizeCyber)

###################################################### 2020 ##########################################

## perfect factorizationa and numeric conversion removing all the problematic labels for imputation 
dataCyberSecuritySurvey2020TidyNameSizeCyber$instituitionTypes = as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$instituitionTypes)

dataCyberSecuritySurvey2020TidyNameSizeCyber$sizea = as.numeric(dataCyberSecuritySurvey2020TidyNameSizeCyber$sizea)

dataCyberSecuritySurvey2020TidyNameSizeCyber$sizeb = as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$sizeb)

dataCyberSecuritySurvey2020TidyNameSizeCyber$priority = as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$priority)

dataCyberSecuritySurvey2020TidyNameSizeCyber$update = as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$update)

dataCyberSecuritySurvey2020TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$managementContinuity)

dataCyberSecuritySurvey2020TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$managementContinuity)

dataCyberSecuritySurvey2020TidyNameSizeCyber$year = as.numeric(dataCyberSecuritySurvey2020TidyNameSizeCyber$year)

dataCyberSecuritySurvey2020TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$managementContinuity)
dataCyberSecuritySurvey2020TidyNameSizeCyber$managementCyber= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$managementCyber)
dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesUpdating= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesUpdating)
dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesUserControl= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesUserControl)
dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesSecurityConfigs= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$rulesSecurityConfigs)
dataCyberSecuritySurvey2020TidyNameSizeCyber$policyStaffAccess= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$policyStaffAccess)
dataCyberSecuritySurvey2020TidyNameSizeCyber$policyData= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$policyData)
dataCyberSecuritySurvey2020TidyNameSizeCyber$policyPrivate= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$policyPrivate)
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackInfection= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$attackInfection)
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackPhising= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$attackPhising)
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackBreaching= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$attackBreaching)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesData= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesData)
dataCyberSecuritySurvey2020TidyNameSizeCyber$ outcomesDDOS= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$ outcomesDDOS)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesTheft= as.factor(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesTheft)


str(dataCyberSecuritySurvey2020TidyNameSizeCyber)


###################################################### 2019 ##########################################

## perfect factorizationa and numeric conversion removing all the problematic labels for imputation 
dataCyberSecuritySurvey2019TidyNameSizeCyber$instituitionTypes = as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$instituitionTypes)

dataCyberSecuritySurvey2019TidyNameSizeCyber$sizea = as.numeric(dataCyberSecuritySurvey2019TidyNameSizeCyber$sizea)

dataCyberSecuritySurvey2019TidyNameSizeCyber$sizeb = as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$sizeb)

dataCyberSecuritySurvey2019TidyNameSizeCyber$priority = as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$priority)

dataCyberSecuritySurvey2019TidyNameSizeCyber$update = as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$update)

dataCyberSecuritySurvey2019TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$managementContinuity)

dataCyberSecuritySurvey2019TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$managementContinuity)

dataCyberSecuritySurvey2019TidyNameSizeCyber$year = as.numeric(dataCyberSecuritySurvey2019TidyNameSizeCyber$year)

dataCyberSecuritySurvey2019TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$managementContinuity)
dataCyberSecuritySurvey2019TidyNameSizeCyber$managementCyber= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$managementCyber)
dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesUpdating= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesUpdating)
dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesUserControl= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesUserControl)
dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesSecurityConfigs= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$rulesSecurityConfigs)
dataCyberSecuritySurvey2019TidyNameSizeCyber$policyStaffAccess= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$policyStaffAccess)
dataCyberSecuritySurvey2019TidyNameSizeCyber$policyData= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$policyData)
dataCyberSecuritySurvey2019TidyNameSizeCyber$policyPrivate= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$policyPrivate)
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackInfection= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$attackInfection)
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackPhising= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$attackPhising)
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackBreaching= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$attackBreaching)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesData= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesData)
dataCyberSecuritySurvey2019TidyNameSizeCyber$ outcomesDDOS= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$ outcomesDDOS)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesTheft= as.factor(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesTheft)


str(dataCyberSecuritySurvey2019TidyNameSizeCyber)

###################################################### 2018 ##########################################

## perfect factorizationa and numeric conversion removing all the problematic labels for imputation 
dataCyberSecuritySurvey2018TidyNameSizeCyber$instituitionTypes = as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$instituitionTypes)

dataCyberSecuritySurvey2018TidyNameSizeCyber$sizea = as.numeric(dataCyberSecuritySurvey2018TidyNameSizeCyber$sizea)

dataCyberSecuritySurvey2018TidyNameSizeCyber$sizeb = as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$sizeb)

dataCyberSecuritySurvey2018TidyNameSizeCyber$priority = as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$priority)

dataCyberSecuritySurvey2018TidyNameSizeCyber$update = as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$update)

dataCyberSecuritySurvey2018TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$managementContinuity)

dataCyberSecuritySurvey2018TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$managementContinuity)

dataCyberSecuritySurvey2018TidyNameSizeCyber$year = as.numeric(dataCyberSecuritySurvey2018TidyNameSizeCyber$year)

dataCyberSecuritySurvey2018TidyNameSizeCyber$managementContinuity = as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$managementContinuity)
dataCyberSecuritySurvey2018TidyNameSizeCyber$managementCyber= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$managementCyber)
dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesUpdating= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesUpdating)
dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesUserControl= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesUserControl)
dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesSecurityConfigs= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$rulesSecurityConfigs)
dataCyberSecuritySurvey2018TidyNameSizeCyber$policyStaffAccess= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$policyStaffAccess)
dataCyberSecuritySurvey2018TidyNameSizeCyber$policyData= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$policyData)
dataCyberSecuritySurvey2018TidyNameSizeCyber$policyPrivate= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$policyPrivate)
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackInfection= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$attackInfection)
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackPhising= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$attackPhising)
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackBreaching= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$attackBreaching)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesData= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesData)
dataCyberSecuritySurvey2018TidyNameSizeCyber$ outcomesDDOS= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$ outcomesDDOS)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesTheft= as.factor(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesTheft)


str(dataCyberSecuritySurvey2018TidyNameSizeCyber)



```

## Data Imputation 

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
##remember we must make the imputations before we merge the data of all the years


## m= number of imputations
## maxit = number of iterations

##ppm is for continuous missing data
##loreg is for dichotomous missing data //dichotomous two mutuallu exclusive groups
##polyreg is for categorical missing data // categorical variable can be one of a limited, and usually fixed number of values aka its discrete 
## norm is Bayesian linear regression without predictive mean matching
##TODO maybe write this one the report

## ok so we should have maxit(number of iterations) equal to number of variables because in

##iteration 0 - per imputed dataset at iteration number 0 values are randomly drawn
##iteration 1 - At this step the first variable values are set back to missing. Subsequently, a linear regression model is applied in the available data 
##iteration 2 - the same procedure is repeated for the next variable and so on



```
[@AppliedMissingDataAnalysis]

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
##as we can see in Rubin's works the larger the number of data sets the larger the error will meaning a finite number of imputations is favorable to an infinite number of imputations
## RE=1/(1+(FMI/m))
```
[@rubin_1975]

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## in White, Royston, and Wood book “Multiple imputation using chained equations: Issues and guidance for practice" they proposed the rule of equating the number of imputations to the percentage of missing data in each of the data sets which is what I will be using
```
[@White2010]

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
missmap(dataCyberSecuritySurvey2018TidyNameSizeCyber) ## 17% missing data
missmap(dataCyberSecuritySurvey2019TidyNameSizeCyber) ## 17% missing data
missmap(dataCyberSecuritySurvey2020TidyNameSizeCyber) ## 14% missing data
missmap(dataCyberSecuritySurvey2021TidyNameSizeCyber) ## 16% missing data
missmap(dataCyberSecuritySurvey2022TidyNameSizeCyber) ## 15% missing data
```

## Imputed values here

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72), eval=FALSE}


## we will release the krakens after all the testing and debuggins
#imp2022 = mice(dataCyberSecuritySurvey2022TidyNameSizeCyber, m=100, maxit=21)

## we actually don't want to specify the method here because mice will automatically choose between logression and polyregression for the values depending on the R data structure 

imp2022 = mice(dataCyberSecuritySurvey2022TidyNameSizeCyber, m=17, maxit=21)
imp2021 = mice(dataCyberSecuritySurvey2022TidyNameSizeCyber, m=17, maxit=21)
imp2020 = mice(dataCyberSecuritySurvey2022TidyNameSizeCyber, m=14, maxit=21)
imp2019 = mice(dataCyberSecuritySurvey2022TidyNameSizeCyber, m=16, maxit=21)
imp2018 = mice(dataCyberSecuritySurvey2022TidyNameSizeCyber, m=15, maxit=21)

imp2022$method

#imp$loggedEvents
#view(imp$loggedEvents)

## don't forget https://stats.stackexchange.com/questions/76488/error-system-is-computationally-singular-when-running-a-glm

 ##from this day on I will pray and offer a candle to my new god, professor Martijn W Heymans https://missingdatasolutions.rbind.io/contact/
    
    ##truly a blessing from the lord


##the imputed data sets are extracted with the function complete. The options action = ”long” and include = TRUE returns a dataframe with imputed datasets  that are stacked with each other imputed datasets plus the original dataset (with missings) on top 
```
## Fitting the model after the imputations

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72), eval=FALSE}
##continuing from here because otherwise the reference won't work


imp2022$predictorMatrix
## the mice library already turned on the relevant variable for the imputation modelling turning only the imid(unique id) and year variable which is not useful for the imputations done on a year to year basis therefore I don't need to tweak it manually using pred <-imp$predictorMatrix

## I might disable the size, priority or updates if needed though but they seemed to be needed since they make the amount missing values depends on these (basically auxiliary variables)


## https://stefvanbuuren.name/fimd/workflow.html  // go to 5.1
## mice documentation is *chef kiss*

#imp$nmis

##the imputations are done so now we will use the with function from mice to fit the model

##chose the one with the lowest aic and bic
anova()

##fitting the model to one of the variables of the outcomes, this case I will start with the outcome for Data damages since it is the more commonly flagged one

## this does not work because it is not finding anything meaning between my factors
fit2022 = with(imp2022, lm(outcomesData ~ attackBreaching + attackPhising + attackInfection + managementCyber + managementCyber))

fit2022Attacks = with(imp2022, lm(outcomesData ~ attackBreaching + attackPhising + attackInfection))

anova(fit2022,fit2022Attacks)

fit2022Attacks = with(dataCyberSecuritySurvey2022TidyNameSizeCyber, lm(outcomesData ~ attackBreaching ))

dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching= as.numeric(dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching)

for (i in 1:length(dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching[i])) {
  dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching[i], 2)
  if(dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching[i] == 0.0000001){
    dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching[i] = 2
  }

}

str(dataCyberSecuritySurvey2022TidyNameSizeCyber)

dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching= as.factor(dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching)

fit2022 = with(imp2022, lm(outcomesTheft ~ attackBreaching + attackPhising + attackInfection ))

## No meaningfull correlation moment
summary(fit2022)


##est2022=pool(fit2022)

test = dataCyberSecuritySurvey2022TidyNameSizeCyber

dataCyberSecuritySurvey2022TidyNameSizeCyber 

str(dataCyberSecuritySurvey2022TidyNameSizeCyber)
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-year)
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-sizea)

##after fitting the model we will use the pooled imputations using the model to make the estimation





#plot(imp2022)
#stripplot(imp2018)



#complete(imp, action = "long", include = TRUE)
```







```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
## my last brain cells
## also code is finished compiling
browseURL('https://www.youtube.com/watch?v=M3Keg5XKJO8')

##in case of emergency break this comment
##browseURL('https://youtu.be/eoV7lw7YBG4?t=6')

```

## Quarto

Quarto enables you to weave together content and executable code into a
finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that
includes both content and the output of embedded code. You can embed
code like this:

```{r tidy=TRUE, tidy.opts=list(width.cutoff=72)}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is
displayed).
