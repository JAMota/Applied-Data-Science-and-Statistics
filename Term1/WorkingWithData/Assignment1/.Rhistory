}
if(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy1[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$policy4[i] == 1){ ##either 2,3,4
dataCyberSecuritySurvey2022TidyNameSizeCyber$policyPrivate[i] = 1
}else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy1[i] == -10005 && dataCyberSecuritySurvey2022TidyNameSizeCyber$policy4[i] == -10005 ){
dataCyberSecuritySurvey2022TidyNameSizeCyber$policyPrivate[i] = NA
}
if(dataCyberSecuritySurvey2022TidyNameSizeCyber$policy8[i] == 1){ ##NA
dataCyberSecuritySurvey2022TidyNameSizeCyber$policyPrivate[i] = NA
dataCyberSecuritySurvey2022TidyNameSizeCyber$policyData[i] = NA
dataCyberSecuritySurvey2022TidyNameSizeCyber$policyStaffAccess[i] = NA
}
}
##another day of garbage collection of unused columns
dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(policy1:policy9))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(policy1:policy9))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(policy1:policy9))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(policy1:policy9))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(policy1:policy12))
## taking care of the columns that are only in the 2018 survey
dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(doc1:doc6))
##removing the question about if they know about the 10 steps for cyber security
##Spoiler alert: knowing about it doesnt mean you apply it and you can learn about it from other sources either way
#https://www.ncsc.gov.uk/collection/10-steps/risk-management
##same for the next question about the cyber essential scheme
##nevermind they removed all the rest of the questions until business standard on 2019 and 2020 (Q43)
dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(tensteps:implemb))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(tensteps:implemb))
## TODO: think if I should keep the review of cyber security documentation colum
## removing it since i don't have it on 2018 and I don't think I will be using it
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-review)
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-review)
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-review)
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-review)
## in 2022 they asked some proper questions about cyber security training and cyber security strategy that will be removed for lack of comparrison with the other years
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(trained:corprisk))
##Removing the question about cyber security conserns in the suppliers because
##1 - most institutions evaluated here won't be in a scale where that is an important question
##2 - if you were a big institution you would just have taken of most of the inside managed and now would worry about the suppliers on that level you will just get multiple suppliers in case your main supplier fails removing the SPOF(single point of failure) that way
##like what would they do anyway such a poorly written question, just hire me to write next year survey instead
dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-supply)
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-supply)
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(supplyrisk1:supplyrisk2))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(supplyrisk1:supplyrisk2))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(supplyrisk1:supplyrisk2))
##questions about supplier standards were deleted after 2019
dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(adhere1:cloud))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(adhere1:cloud))
## only asked in 2022 so not relevant for comparrison
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(barrier1:barrier8))
##type of attacks that targetted the institution
##type 01 - ramsomware infection
##type 02 - spyware, malware or other type of infection
##type 03 - DDOS (distributed denial of service)
##type 04 - hacking online bank accounts
##type 05 - phising - impersonating your organisation
##type 06 - phising - fraudulent emails or website targetting staff
##type 07 - unauthorized access by internal staff members
##type 08 - unauthorized access by outsiders
##type 09 - other type of cyber attacks
##type 10 - don't know
##type 11 - (don't care) none of these
##type 12 - refused to answer
##type 13 - unauthorized access by students (to be merged with type 7) // only used starting from 2022
## type 15 and 16 were only collect in 2022 so not to be compared and type 14 just does not exist for some reason
##time to some non-git merges on the variables
##attackInfection - ramsomware infection (type 1), spyware, malware and other types (type 2), DDOS (type 3)
##attackPhising - hacking online bank accounts (type 4), phising - impersonating organisation (type 5), phising - fraudulent emails or websites (phising 6)
##attackBreaching - unauthorized access internal staff (type 7), unauthorized access outsiders (type 8), unauthorized access by students (type 13 only in 2022)
##remember that type 10 and 12 is missing data
##################################################### 2018 ###############################################
numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$type1)
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackInfection = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackPhising = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackBreaching = 0
for (i in 1:numberOfCycles) {
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$type1[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type2[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type3[i] == 1 ){ ##either 1,2,3
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackInfection[i] = 1
}
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$type4[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type5[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type6[i] == 1 ){ ##either 5,4,6
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackPhising[i] = 1
}
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$type7[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type8[i] == 1){
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackBreaching[i] = 1
}
if(
##dataCyberSecuritySurvey2018TidyNameSizeCyber$type1[i] == 9 ||
dataCyberSecuritySurvey2018TidyNameSizeCyber$type10[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$type12[i] == 1 ){ ##either 9,10,12
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackPhising[i] = NA
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackBreaching[i] = NA
dataCyberSecuritySurvey2018TidyNameSizeCyber$attackInfection[i] = NA
}
## basically if we only know they got other type of attacks (policy 9 then we know the type of attacks we record didn't happen but we don't have any data on those which is ok since we weren't collecting them anyway) //keep this comment on all or I will garantee I will forget it
}
##################################################### 2019 ###############################################
numberOfCycles = length(dataCyberSecuritySurvey2019TidyNameSizeCyber$type1)
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackInfection = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackPhising = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackBreaching = 0
for (i in 1:numberOfCycles) {
if(dataCyberSecuritySurvey2019TidyNameSizeCyber$type1[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type2[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type3[i] == 1 ){ ##either 1,2,3
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackInfection[i] = 1
}
if(dataCyberSecuritySurvey2019TidyNameSizeCyber$type4[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type5[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type6[i] == 1 ){ ##either 5,4,6
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackPhising[i] = 1
}
if(dataCyberSecuritySurvey2019TidyNameSizeCyber$type7[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type8[i] == 1){
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackBreaching[i] = 1
}
if(
##dataCyberSecuritySurvey2019TidyNameSizeCyber$type1[i] == 9 ||
dataCyberSecuritySurvey2019TidyNameSizeCyber$type10[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$type12[i] == 1 ){ ##either 9,10,12
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackPhising[i] = NA
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackBreaching[i] = NA
dataCyberSecuritySurvey2019TidyNameSizeCyber$attackInfection[i] = NA
}
## basically if we only know they got other type of attacks (policy 9 then we know the type of attacks we record didn't happen but we don't have any data on those which is ok since we weren't collecting them anyway) //keep this comment on all or I will garantee I will forget it
}
##################################################### 2020 ###############################################
numberOfCycles = length(dataCyberSecuritySurvey2020TidyNameSizeCyber$type1)
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackInfection = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackPhising = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackBreaching = 0
for (i in 1:numberOfCycles) {
if(dataCyberSecuritySurvey2020TidyNameSizeCyber$type1[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type2[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type3[i] == 1 ){ ##either 1,2,3
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackInfection[i] = 1
}
if(dataCyberSecuritySurvey2020TidyNameSizeCyber$type4[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type5[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type6[i] == 1 ){ ##either 5,4,6
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackPhising[i] = 1
}
if(dataCyberSecuritySurvey2020TidyNameSizeCyber$type7[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type8[i] == 1){
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackBreaching[i] = 1
}
if(
##dataCyberSecuritySurvey2020TidyNameSizeCyber$type1[i] == 9 ||
dataCyberSecuritySurvey2020TidyNameSizeCyber$type10[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$type12[i] == 1 ){ ##either 9,10,12
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackPhising[i] = NA
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackBreaching[i] = NA
dataCyberSecuritySurvey2020TidyNameSizeCyber$attackInfection[i] = NA
}
## basically if we only know they got other type of attacks (policy 9 then we know the type of attacks we record didn't happen but we don't have any data on those which is ok since we weren't collecting them anyway) //keep this comment on all or I will garantee I will forget it
}
##################################################### 2021 ###############################################
numberOfCycles = length(dataCyberSecuritySurvey2021TidyNameSizeCyber$type1)
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackInfection = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackPhising = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackBreaching = 0
for (i in 1:numberOfCycles) {
if(dataCyberSecuritySurvey2021TidyNameSizeCyber$type1[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type2[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type3[i] == 1 ){ ##either 1,2,3
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackInfection[i] = 1
}
if(dataCyberSecuritySurvey2021TidyNameSizeCyber$type4[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type5[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type6[i] == 1 ){ ##either 5,4,6
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackPhising[i] = 1
}
if(dataCyberSecuritySurvey2021TidyNameSizeCyber$type7[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type8[i] == 1){
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackBreaching[i] = 1
}
if(
##dataCyberSecuritySurvey2020TidyNameSizeCyber$type1[i] == 9 ||
dataCyberSecuritySurvey2021TidyNameSizeCyber$type10[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$type12[i] == 1 ){ ##either 9,10,12
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackPhising[i] = NA
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackBreaching[i] = NA
dataCyberSecuritySurvey2021TidyNameSizeCyber$attackInfection[i] = NA
}
## basically if we only know they got other type of attacks (policy 9 then we know the type of attacks we record didn't happen but we don't have any data on those which is ok since we weren't collecting them anyway) //keep this comment on all or I will guarantee I will forget it
}
##################################################### 2022 ###############################################
numberOfCycles = length(dataCyberSecuritySurvey2022TidyNameSizeCyber$type1)
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackInfection = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackPhising = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching = 0
for (i in 1:numberOfCycles) {
if(dataCyberSecuritySurvey2022TidyNameSizeCyber$type1[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type2[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type3[i] == 1 ){ ##either 1,2,3
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackInfection[i] = 1
}
if(dataCyberSecuritySurvey2022TidyNameSizeCyber$type4[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type5[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type6[i] == 1 ){ ##either 5,4,6
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackPhising[i] = 1
}
if(dataCyberSecuritySurvey2022TidyNameSizeCyber$type7[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type8[i] == 1){
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching[i] = 1
}
if(
##dataCyberSecuritySurvey2020TidyNameSizeCyber$type1[i] == 9 ||
dataCyberSecuritySurvey2022TidyNameSizeCyber$type10[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$type12[i] == 1 ){ ##either 9,10,12
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackPhising[i] = NA
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackBreaching[i] = NA
dataCyberSecuritySurvey2022TidyNameSizeCyber$attackInfection[i] = NA
}
## basically if we only know they got other type of attacks (policy 9 then we know the type of attacks we record didn't happen but we don't have any data on those which is ok since we weren't collecting them anyway) //keep this comment on all or I will guarantee I will forget it
}
dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(type1:type12))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(type1:type12))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(type1:type13))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(type1:type13))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(type1:type16))
## i think I will also remove the frequency of the attack since I won't be using them for anything and also removing the  //TODO review this choice
dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(freq:numbb))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(freq:numbb))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-freq)
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-freq)
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-freq)
## now to register both outcome and impact
##for the frequency of attacks in the last 12 months I am not sure if I am interested in that data
##TODO I am temporary removing them if I can add thhem back if needed (more interested in the outcome of the attacks)
##outcomes from the attacks
##outcome 01 - Software or systems were corrupted or damaged (permanent DDOS)
##outcome 02 - Personal data was altered, destroyed or taken
##outcome 03 - Permanent loss of files (other than personal data)
##outcome 04 - Temporary loss of access to files or networks
##outcome 05 - Lost or stolen assets, trade secrets or intellectual property
##outcome 06 - Money was stolen
##outcome 07 - (DDOS) website or online services were taken down or made slower
##outcome 08 - Lost access to any third-party services you rely on
##outcome 09 - Don't know (NA)
##outcome 10 - none of these
##outcome 11,12 and 13 are only present in 2022 so we won't use them to make comparisons
## as the lord and savior Dr Mark Kelson has preached to me on you shall merge the multiple outcomes into smaller ones to have better correlations
## If you are reading this one mark don't forget my extra points for that one time I had to turn on the system in the computer lab because it was turned off the the professors assistants weren't there yet
##to comment it all its ctr+shift+c #FicaADica
##outcomesData - is a combination of personal data was altered (outcome2), temporary or permanent loss of access to files (outcome 3 and 4)
##outcomesDDOS - websites or online service was taken down or made slower (outcome 7), lost access to any third party services (outcome 8) and software or system corruption and damaged (permanent DDOS) (outcome1)
##outcomesTheft - lost or stolen assets, trade secrets or intellectual property (outcome 5) and stolen money (outcome 6)
##################################################### 2018 ###############################################
numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome1)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesData = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesDDOS = 0
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesTheft = 0
for (i in 1:numberOfCycles) {
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome1[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome1[i], -10007)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome2[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome2[i], -10007)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome3[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome3[i], -10007)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome4[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome4[i], -10007)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome5[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome5[i], -10007)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome6[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome6[i], -10007)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome7[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome7[i], -10007)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome8[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome8[i], -10007)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome10[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome9[i], -10007)
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome9[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome10[i], -10007)
## my probably pathetic attempt to optimize my loops to not get a 10 minute compilation #my toast runs slower than a toaster, and toasters don't even have legs to run
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome1[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome7[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome8[i] == 1){ ##either 1,7,8
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesDDOS[i] = 1
} else if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome1[i] == -10007 && dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome7[i] == -10007 && dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome8[i] == -10007){
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesDDOS[i] = NA
}
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome2[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome3[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome4[i] == 1){ ##either 2,3,4
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesData[i] = 1
} else if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome2[i] == -10007 && dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome3[i] == -10007 && dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome4[i] == -10007){
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesData[i] = NA
}
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome5[i] == 1 || dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome6[i] == 1){ ##either 5 or 6
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesTheft[i] = 1
} else if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome5[i] == -10007 && dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome6[i] == -10007) {
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesTheft[i] = NA
}
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$outcome9[i] == 1) {
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesTheft[i] = NA
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesData[i] = NA
dataCyberSecuritySurvey2018TidyNameSizeCyber$outcomesDDOS[i] = NA
}
}
##################################################### 2019 ###############################################
numberOfCycles = length(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome1)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesData = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesDDOS = 0
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesTheft = 0
for (i in 1:numberOfCycles) {
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome1[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome1[i], -10007)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome2[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome2[i], -10007)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome3[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome3[i], -10007)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome4[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome4[i], -10007)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome5[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome5[i], -10007)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome6[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome6[i], -10007)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome7[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome7[i], -10007)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome8[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome8[i], -10007)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome9[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome9[i], -10007)
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome10[i] = replace_na(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome10[i], -10007)
## my probably pathetic attempt to optimize my loops to not get a 10 minute compilation #my toast runs slower than a toaster, and toasters don't even have legs to run
if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome1[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome7[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome8[i] == 1){ ##either 1,7,8
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesDDOS[i] = 1
} else if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome1[i] == -10007 && dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome7[i] == -10007 && dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome8[i] == -10007){
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesDDOS[i] = NA
}
if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome2[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome3[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome4[i] == 1){ ##either 2,3,4
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesData[i] = 1
} else if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome2[i] == -10007 && dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome3[i] == -10007 && dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome4[i] == -10007){
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesData[i] = NA
}
if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome5[i] == 1 || dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome6[i] == 1){ ##either 5 or 6
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesTheft[i] = 1
} else if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome5[i] == -10007 && dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome6[i] == -10007) {
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesTheft[i] = NA
}
if(dataCyberSecuritySurvey2019TidyNameSizeCyber$outcome9[i] == 1) {
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesTheft[i] = NA
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesData[i] = NA
dataCyberSecuritySurvey2019TidyNameSizeCyber$outcomesDDOS[i] = NA
}
}
##################################################### 2020 ###############################################
numberOfCycles = length(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome1)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesData = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesDDOS = 0
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesTheft = 0
for (i in 1:numberOfCycles) {
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome1[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome1[i], -10007)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome2[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome2[i], -10007)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome3[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome3[i], -10007)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome4[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome4[i], -10007)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome5[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome5[i], -10007)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome6[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome6[i], -10007)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome7[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome7[i], -10007)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome8[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome8[i], -10007)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome9[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome9[i], -10007)
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome10[i] = replace_na(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome10[i], -10007)
## my probably pathetic attempt to optimize my loops to not get a 10 minute compilation #my toast runs slower than a toaster, and toasters don't even have legs to run
if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome1[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome7[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome8[i] == 1){ ##either 1,7,8
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesDDOS[i] = 1
} else if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome1[i] == -10007 && dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome7[i] == -10007 && dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome8[i] == -10007){
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesDDOS[i] = NA
}
if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome2[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome3[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome4[i] == 1){ ##either 2,3,4
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesData[i] = 1
} else if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome2[i] == -10007 && dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome3[i] == -10007 && dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome4[i] == -10007){
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesData[i] = NA
}
if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome5[i] == 1 || dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome6[i] == 1){ ##either 5 or 6
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesTheft[i] = 1
} else if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome5[i] == -10007 && dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome6[i] == -10007) {
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesTheft[i] = NA
}
if(dataCyberSecuritySurvey2020TidyNameSizeCyber$outcome9[i] == 1) {
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesTheft[i] = NA
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesData[i] = NA
dataCyberSecuritySurvey2020TidyNameSizeCyber$outcomesDDOS[i] = NA
}
}
##################################################### 2021 ###############################################
numberOfCycles = length(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome1)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS = 0
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft = 0
#dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesChmod = 0
for (i in 1:numberOfCycles) {
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome1[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome1[i], -10007)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome2[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome2[i], -10007)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome3[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome3[i], -10007)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome4[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome4[i], -10007)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome5[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome5[i], -10007)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome6[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome6[i], -10007)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome7[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome7[i], -10007)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome8[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome8[i], -10007)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome9[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome9[i], -10007)
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome10[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome10[i], -10007)
## my probably pathetic attempt to optimize my loops to not get a 10 minute compilation #my toast runs slower than a toaster, and toasters don't even have legs to run
if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome1[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome7[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome8[i] == 1){ ##either 1,7,8
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i] = 1
} else if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome1[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome7[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome8[i] == -10007){
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i] = NA
}
if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome2[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome3[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome4[i] == 1){ ##either 2,3,4
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] = 1
} else if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome2[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome3[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome4[i] == -10007){
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] = NA
}
if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome5[i] == 1 || dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome6[i] == 1){ ##either 5 or 6
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] = 1
} else if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome5[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome6[i] == -10007) {
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] = NA
}
if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcome9[i] == 1) {
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] = NA
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] = NA
dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i] = NA
}
## this data set is not yet lost 🙃
##using the same principle as the chmod for linux permissions since we only have 3 final outcomes (thank god past me) we will use the values 1, 2 and 4 for outcomesData, outcomesDDOS and outcomesTheft respectively and then we derive the outcome thanks to the sum of those 3 which are all unique
##I am now a defenestration expert after throw so much things out of the window after realising none of my solutions work
# dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i], -10007)
# dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i], -10007)
# dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] = replace_na(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i], -10007)
#
# if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] == 1) {
#
#   dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesChmod[i] = dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesChmod[i] + 1
# }
# if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i] == 1) {
#
#   dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesChmod[i] = dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesChmod[i] + 2
#         }
# if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] == 1) {
#
#   dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesChmod[i] = dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesChmod[i] + 4
# }
#
#     if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] == -10007 && dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS == -10007 &&
#        dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] == -10007) {
#
#   dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesChmod[i] = NA
#     }
#
# if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] == -10007) {
#
#   dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesTheft[i] = NA
# }
# if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] == -10007) {
#
#   dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesData[i] = NA
#     }
# if(dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i] == -10007) {
#
#   dataCyberSecuritySurvey2021TidyNameSizeCyber$outcomesDDOS[i] = NA
# }
#
}
##################################################### 2022 ###############################################
numberOfCycles = length(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome1)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesData = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesDDOS = 0
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesTheft = 0
for (i in 1:numberOfCycles) {
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome1[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome1[i], -10007)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome2[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome2[i], -10007)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome3[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome3[i], -10007)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome4[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome4[i], -10007)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome5[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome5[i], -10007)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome6[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome6[i], -10007)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome7[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome7[i], -10007)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome8[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome8[i], -10007)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome9[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome9[i], -10007)
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome10[i] = replace_na(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome10[i], -10007)
## my probably pathetic attempt to optimize my loops to not get a 10 minute compilation #my toast runs slower than a toaster, and toasters don't even have legs to run
##if anyone asks yes I started from bottom to top but I can and I love see my pc dying compiling my poorly optimized code
if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome1[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome7[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome8[i] == 1){ ##either 1,7,8
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesDDOS[i] = 1
} else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome1[i] == -10007 && dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome7[i] == -10007 && dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome8[i] == -10007){
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesDDOS[i] = NA
}
if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome2[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome3[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome4[i] == 1){ ##either 2,3,4
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesData[i] = 1
} else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome2[i] == -10007 && dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome3[i] == -10007 && dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome4[i] == -10007){
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesData[i] = NA
}
if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome5[i] == 1 || dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome6[i] == 1){ ##either 5 or 6
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesTheft[i] = 1
} else if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome5[i] == -10007 && dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome6[i] == -10007) {
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesTheft[i] = NA
}
if(dataCyberSecuritySurvey2022TidyNameSizeCyber$outcome9[i] == 1) {
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesTheft[i] = NA
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesData[i] = NA
dataCyberSecuritySurvey2022TidyNameSizeCyber$outcomesDDOS[i] = NA
}
}
dataCyberSecuritySurvey2018TidyNameSizeCyber = dataCyberSecuritySurvey2018TidyNameSizeCyber %>% select(-(outcome1:outcome10))
dataCyberSecuritySurvey2019TidyNameSizeCyber = dataCyberSecuritySurvey2019TidyNameSizeCyber %>% select(-(outcome1:outcome10))
dataCyberSecuritySurvey2020TidyNameSizeCyber = dataCyberSecuritySurvey2020TidyNameSizeCyber %>% select(-(outcome1:outcome10))
dataCyberSecuritySurvey2021TidyNameSizeCyber = dataCyberSecuritySurvey2021TidyNameSizeCyber %>% select(-(outcome1:outcome10))
dataCyberSecuritySurvey2022TidyNameSizeCyber = dataCyberSecuritySurvey2022TidyNameSizeCyber %>% select(-(outcome1:outcome13))
test = dataCyberSecuritySurvey2018TidyNameSizeCyber
numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore)
dataCyberSecuritySurvey2018TidyNameSizeCyber$restoreTime = 0
for (i in 1:numberOfCycles-1) {
dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i], 7)
##apparently either for lack of transaction completion or parallel computing I am always getting an error for comparing with NA here so I am just going to compute a new variable here and not worry about it
if(!is.na(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i])){
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i] == 6){
print(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i])
dataCyberSecuritySurvey2018TidyNameSizeCyber =
dataCyberSecuritySurvey2018TidyNameSizeCyber[-c(i), ]
}
}
}
dataCyberSecuritySurvey2018TidyNameSizeCyber$restore
numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore)
dataCyberSecuritySurvey2018TidyNameSizeCyber$restoreTime = 0
for (i in 1:numberOfCycles-1) {
dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i], 7)
##apparently either for lack of transaction completion or parallel computing I am always getting an error for comparing with NA here so I am just going to compute a new variable here and not worry about it
if(!is.na(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i])){
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i] == 6){
print(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i])
dataCyberSecuritySurvey2018TidyNameSizeCyber =
dataCyberSecuritySurvey2018TidyNameSizeCyber[-c(i), ]
}
}
}
numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore)
dataCyberSecuritySurvey2018TidyNameSizeCyber$restoreTime = 0
for (i in 1:numberOfCycles-1) {
dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i], 7)
##apparently either for lack of transaction completion or parallel computing I am always getting an error for comparing with NA here so I am just going to compute a new variable here and not worry about it
if(!is.na(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i])){
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i] == 6){
print(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i])
dataCyberSecuritySurvey2018TidyNameSizeCyber =
dataCyberSecuritySurvey2018TidyNameSizeCyber[-c(i), ]
}
}
}
numberOfCycles = length(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore)
dataCyberSecuritySurvey2018TidyNameSizeCyber$restoreTime = 0
for (i in 1:numberOfCycles-1) {
dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i] = replace_na(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i], 7)
##apparently either for lack of transaction completion or parallel computing I am always getting an error for comparing with NA here so I am just going to compute a new variable here and not worry about it
#if(!is.na(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i])){
if(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i] == 6){
print(dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i])
dataCyberSecuritySurvey2018TidyNameSizeCyber =
dataCyberSecuritySurvey2018TidyNameSizeCyber[-c(i), ]
}
#}
}
dataCyberSecuritySurvey2018TidyNameSizeCyber$restore[i
